'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection
Imports System.Runtime.Serialization


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="NodNts")> _
Partial Public Class DataClassesDataContext
	Inherits System.Data.Linq.DataContext

	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
	Partial Private Sub OnCreated()
	End Sub
	Partial Private Sub InsertStatus(instance As Status)
	End Sub
	Partial Private Sub UpdateStatus(instance As Status)
	End Sub
	Partial Private Sub DeleteStatus(instance As Status)
	End Sub
	Partial Private Sub InsertStatusDBF(instance As StatusDBF)
	End Sub
	Partial Private Sub UpdateStatusDBF(instance As StatusDBF)
	End Sub
	Partial Private Sub DeleteStatusDBF(instance As StatusDBF)
	End Sub
	Partial Private Sub InsertState(instance As State)
	End Sub
	Partial Private Sub UpdateState(instance As State)
	End Sub
	Partial Private Sub DeleteState(instance As State)
	End Sub
	Partial Private Sub InsertCounty(instance As County)
	End Sub
	Partial Private Sub UpdateCounty(instance As County)
	End Sub
	Partial Private Sub DeleteCounty(instance As County)
	End Sub
	Partial Private Sub InsertUsuario(instance As Usuario)
	End Sub
	Partial Private Sub UpdateUsuario(instance As Usuario)
	End Sub
	Partial Private Sub DeleteUsuario(instance As Usuario)
	End Sub
	Partial Private Sub InsertESTIMATED_VALUE(instance As ESTIMATED_VALUE)
	End Sub
	Partial Private Sub UpdateESTIMATED_VALUE(instance As ESTIMATED_VALUE)
	End Sub
	Partial Private Sub DeleteESTIMATED_VALUE(instance As ESTIMATED_VALUE)
	End Sub
	Partial Private Sub InsertNT(instance As NT)
	End Sub
	Partial Private Sub UpdateNT(instance As NT)
	End Sub
	Partial Private Sub DeleteNT(instance As NT)
	End Sub
	Partial Private Sub InsertNOD(instance As NOD)
	End Sub
	Partial Private Sub UpdateNOD(instance As NOD)
	End Sub
	Partial Private Sub DeleteNOD(instance As NOD)
	End Sub
#End Region

	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NodNtsConnectionString").ConnectionString, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public ReadOnly Property Status() As System.Data.Linq.Table(Of Status)
		Get
			Return Me.GetTable(Of Status)()
		End Get
	End Property

	Public ReadOnly Property MASKs() As System.Data.Linq.Table(Of MASK)
		Get
			Return Me.GetTable(Of MASK)()
		End Get
	End Property

	Public ReadOnly Property StatusDBFs() As System.Data.Linq.Table(Of StatusDBF)
		Get
			Return Me.GetTable(Of StatusDBF)()
		End Get
	End Property

	Public ReadOnly Property States() As System.Data.Linq.Table(Of State)
		Get
			Return Me.GetTable(Of State)()
		End Get
	End Property

	Public ReadOnly Property Counties() As System.Data.Linq.Table(Of County)
		Get
			Return Me.GetTable(Of County)()
		End Get
	End Property

	Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Usuario)
		Get
			Return Me.GetTable(Of Usuario)()
		End Get
	End Property

	Public ReadOnly Property ESTIMATED_VALUEs() As System.Data.Linq.Table(Of ESTIMATED_VALUE)
		Get
			Return Me.GetTable(Of ESTIMATED_VALUE)()
		End Get
	End Property

	Public ReadOnly Property NTs() As System.Data.Linq.Table(Of NT)
		Get
			Return Me.GetTable(Of NT)()
		End Get
	End Property

	Public ReadOnly Property NODs() As System.Data.Linq.Table(Of NOD)
		Get
			Return Me.GetTable(Of NOD)()
		End Get
	End Property

	Public ReadOnly Property Cities_in_Counties() As System.Data.Linq.Table(Of Cities_in_County)
		Get
			Return Me.GetTable(Of Cities_in_County)()
		End Get
	End Property

	Public ReadOnly Property NTSMatchings() As System.Data.Linq.Table(Of NTSMatching)
		Get
			Return Me.GetTable(Of NTSMatching)()
		End Get
	End Property

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SearchNOD")> _
	Public Function SearchNOD(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TDID", DbType:="VarChar(20)")> ByVal tDID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ASSPAR", DbType:="VarChar(46)")> ByVal aSSPAR As String) As ISingleResult(Of SearchNODResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), tDID, aSSPAR)
		Return CType(result.ReturnValue, ISingleResult(Of SearchNODResult))
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.SearchNTS")> _
	Public Function SearchNTS(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TDID", DbType:="VarChar(20)")> ByVal tDID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NTS", DbType:="VarChar(14)")> ByVal nTS As String) As ISingleResult(Of SearchNTSResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), tDID, nTS)
		Return CType(result.ReturnValue, ISingleResult(Of SearchNTSResult))
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.NTStoNOD")> _
	Public Function NTStoNOD(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdNTS", DbType:="Int")> ByVal idNTS As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), idNTS)
		Return CType(result.ReturnValue, Integer)
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetMissingLoanFromNOD")> _
	Public Function GetMissingLoanFromNOD(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SA_PROPERTY_ID", DbType:="VarChar(50)")> ByVal sA_PROPERTY_ID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LOAN_DATE", DbType:="Date")> ByVal lOAN_DATE As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="LOAN_AMOUNT", DbType:="VarChar(10)")> ByVal lOAN_AMOUNT As String) As ISingleResult(Of GetMissingLoanFromNODResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), sA_PROPERTY_ID, lOAN_DATE, lOAN_AMOUNT)
		Return CType(result.ReturnValue, ISingleResult(Of GetMissingLoanFromNODResult))
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetOriginalLoanAmountFromNOD")> _
	Public Function GetOriginalLoanAmountFromNOD(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SA_PROPERTY_ID", DbType:="VarChar(50)")> ByVal sA_PROPERTY_ID As String) As ISingleResult(Of GetOriginalLoanAmountFromNODResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), sA_PROPERTY_ID)
		Return CType(result.ReturnValue, ISingleResult(Of GetOriginalLoanAmountFromNODResult))
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.GetEstimatedValue", IsComposable:=True)> _
	Public Function GetEstimatedValue(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SA_PROPERTY_ID", DbType:="VarChar(12)")> ByVal sA_PROPERTY_ID As String) As String
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), sA_PROPERTY_ID).ReturnValue, String)
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RemoveMidZeroesFromDocumentNumber", IsComposable:=True)> _
	Public Function RemoveMidZeroesFromDocumentNumber(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DocumentNumber", DbType:="VarChar(50)")> ByVal documentNumber As String) As String
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), documentNumber).ReturnValue, String)
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RemoveNonAlphaCharacters", IsComposable:=True)> _
	Public Function RemoveNonAlphaCharacters(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Temp", DbType:="VarChar(1000)")> ByVal temp As String) As String
		Return CType(Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), temp).ReturnValue, String)
	End Function

	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.splitstring", IsComposable:=True)> _
	Public Function splitstring(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(MAX)")> ByVal stringToSplit As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Char(1)")> ByVal separator As System.Nullable(Of Char)) As IQueryable(Of splitstringResult)
		Return Me.CreateMethodCallQuery(Of splitstringResult)(Me, CType(MethodInfo.GetCurrentMethod, MethodInfo), stringToSplit, separator)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Status"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class Status
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdStatus As Integer
	
	Private _Description As String
	
	Private _Color As String
	
	Private _NTs As EntitySet(Of NT)
	
	Private _NODs As EntitySet(Of NOD)
	
	Private serializing As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdStatusChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatus", DbType:="Int NOT NULL", IsPrimaryKey:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdStatus() As Integer
		Get
			Return Me._IdStatus
		End Get
		Set
			If ((Me._IdStatus = value)  _
						= false) Then
				Me.OnIdStatusChanging(value)
				Me.SendPropertyChanging
				Me._IdStatus = value
				Me.SendPropertyChanged("IdStatus")
				Me.OnIdStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Status_NT", Storage:="_NTs", ThisKey:="IdStatus", OtherKey:="IdStatus"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4, EmitDefaultValue:=false)>  _
	Public Property NTs() As EntitySet(Of NT)
		Get
			If (Me.serializing  _
						AndAlso (Me._NTs.HasLoadedOrAssignedValues = false)) Then
				Return Nothing
			End If
			Return Me._NTs
		End Get
		Set
			Me._NTs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Status_NOD", Storage:="_NODs", ThisKey:="IdStatus", OtherKey:="IdStatus"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5, EmitDefaultValue:=false)>  _
	Public Property NODs() As EntitySet(Of NOD)
		Get
			If (Me.serializing  _
						AndAlso (Me._NODs.HasLoadedOrAssignedValues = false)) Then
				Return Nothing
			End If
			Return Me._NODs
		End Get
		Set
			Me._NODs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_NTs(ByVal entity As NT)
		Me.SendPropertyChanging
		entity.Status = Me
	End Sub
	
	Private Sub detach_NTs(ByVal entity As NT)
		Me.SendPropertyChanging
		entity.Status = Nothing
	End Sub
	
	Private Sub attach_NODs(ByVal entity As NOD)
		Me.SendPropertyChanging
		entity.Status = Me
	End Sub
	
	Private Sub detach_NODs(ByVal entity As NOD)
		Me.SendPropertyChanging
		entity.Status = Nothing
	End Sub
	
	Private Sub Initialize()
		Me._NTs = New EntitySet(Of NT)(AddressOf Me.attach_NTs, AddressOf Me.detach_NTs)
		Me._NODs = New EntitySet(Of NOD)(AddressOf Me.attach_NODs, AddressOf Me.detach_NODs)
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerializing(ByVal context As StreamingContext)
		Me.serializing = true
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerialized(ByVal context As StreamingContext)
		Me.serializing = false
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MASK"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class MASK
	
	Private _COUNTY As String
	
	Private _ASSPAR As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTY", DbType:="VarChar(10) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property COUNTY() As String
		Get
			Return Me._COUNTY
		End Get
		Set
			If (String.Equals(Me._COUNTY, value) = false) Then
				Me._COUNTY = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPAR", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property ASSPAR() As String
		Get
			Return Me._ASSPAR
		End Get
		Set
			If (String.Equals(Me._ASSPAR, value) = false) Then
				Me._ASSPAR = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.StatusDBF"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class StatusDBF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdStatusDBF As Integer
	
	Private _Description As String
	
	Private _Color As String
	
	Private _NTs As EntitySet(Of NT)
	
	Private _NODs As EntitySet(Of NOD)
	
	Private serializing As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdStatusDBFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdStatusDBFChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatusDBF", DbType:="Int NOT NULL", IsPrimaryKey:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdStatusDBF() As Integer
		Get
			Return Me._IdStatusDBF
		End Get
		Set
			If ((Me._IdStatusDBF = value)  _
						= false) Then
				Me.OnIdStatusDBFChanging(value)
				Me.SendPropertyChanging
				Me._IdStatusDBF = value
				Me.SendPropertyChanged("IdStatusDBF")
				Me.OnIdStatusDBFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="StatusDBF_NT", Storage:="_NTs", ThisKey:="IdStatusDBF", OtherKey:="IdStatusDBF"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4, EmitDefaultValue:=false)>  _
	Public Property NTs() As EntitySet(Of NT)
		Get
			If (Me.serializing  _
						AndAlso (Me._NTs.HasLoadedOrAssignedValues = false)) Then
				Return Nothing
			End If
			Return Me._NTs
		End Get
		Set
			Me._NTs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="StatusDBF_NOD", Storage:="_NODs", ThisKey:="IdStatusDBF", OtherKey:="IdStatusDBF"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5, EmitDefaultValue:=false)>  _
	Public Property NODs() As EntitySet(Of NOD)
		Get
			If (Me.serializing  _
						AndAlso (Me._NODs.HasLoadedOrAssignedValues = false)) Then
				Return Nothing
			End If
			Return Me._NODs
		End Get
		Set
			Me._NODs.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_NTs(ByVal entity As NT)
		Me.SendPropertyChanging
		entity.StatusDBF = Me
	End Sub
	
	Private Sub detach_NTs(ByVal entity As NT)
		Me.SendPropertyChanging
		entity.StatusDBF = Nothing
	End Sub
	
	Private Sub attach_NODs(ByVal entity As NOD)
		Me.SendPropertyChanging
		entity.StatusDBF = Me
	End Sub
	
	Private Sub detach_NODs(ByVal entity As NOD)
		Me.SendPropertyChanging
		entity.StatusDBF = Nothing
	End Sub
	
	Private Sub Initialize()
		Me._NTs = New EntitySet(Of NT)(AddressOf Me.attach_NTs, AddressOf Me.detach_NTs)
		Me._NODs = New EntitySet(Of NOD)(AddressOf Me.attach_NODs, AddressOf Me.detach_NODs)
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerializing(ByVal context As StreamingContext)
		Me.serializing = true
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerialized(ByVal context As StreamingContext)
		Me.serializing = false
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.State"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class State
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdState As String
	
	Private _StateName As String
	
	Private _Counties As EntitySet(Of County)
	
	Private serializing As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdStateChanging(value As String)
    End Sub
    Partial Private Sub OnIdStateChanged()
    End Sub
    Partial Private Sub OnStateNameChanging(value As String)
    End Sub
    Partial Private Sub OnStateNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdState", DbType:="VarChar(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdState() As String
		Get
			Return Me._IdState
		End Get
		Set
			If (String.Equals(Me._IdState, value) = false) Then
				Me.OnIdStateChanging(value)
				Me.SendPropertyChanging
				Me._IdState = value
				Me.SendPropertyChanged("IdState")
				Me.OnIdStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StateName", DbType:="VarChar(200) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property StateName() As String
		Get
			Return Me._StateName
		End Get
		Set
			If (String.Equals(Me._StateName, value) = false) Then
				Me.OnStateNameChanging(value)
				Me.SendPropertyChanging
				Me._StateName = value
				Me.SendPropertyChanged("StateName")
				Me.OnStateNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="State_County", Storage:="_Counties", ThisKey:="IdState", OtherKey:="IdState"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3, EmitDefaultValue:=false)>  _
	Public Property Counties() As EntitySet(Of County)
		Get
			If (Me.serializing  _
						AndAlso (Me._Counties.HasLoadedOrAssignedValues = false)) Then
				Return Nothing
			End If
			Return Me._Counties
		End Get
		Set
			Me._Counties.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Counties(ByVal entity As County)
		Me.SendPropertyChanging
		entity.State = Me
	End Sub
	
	Private Sub detach_Counties(ByVal entity As County)
		Me.SendPropertyChanging
		entity.State = Nothing
	End Sub
	
	Private Sub Initialize()
		Me._Counties = New EntitySet(Of County)(AddressOf Me.attach_Counties, AddressOf Me.detach_Counties)
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerializing(ByVal context As StreamingContext)
		Me.serializing = true
	End Sub
	
	<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnSerialized(ByVal context As StreamingContext)
		Me.serializing = false
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.County"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class County
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCounty As Integer
	
	Private _IdState As String
	
	Private _CountyName As String
	
	Private _CRRCode As String
	
	Private _FilePrefix As String
	
	Private _ASSPARFormat As String
	
	Private _TDIDDateFormat As String
	
	Private _IncludeInErrors As Boolean
	
	Private _FillAsspar As Boolean
	
	Private _State As EntityRef(Of State)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdCountyChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCountyChanged()
    End Sub
    Partial Private Sub OnIdStateChanging(value As String)
    End Sub
    Partial Private Sub OnIdStateChanged()
    End Sub
    Partial Private Sub OnCountyNameChanging(value As String)
    End Sub
    Partial Private Sub OnCountyNameChanged()
    End Sub
    Partial Private Sub OnCRRCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCRRCodeChanged()
    End Sub
    Partial Private Sub OnFilePrefixChanging(value As String)
    End Sub
    Partial Private Sub OnFilePrefixChanged()
    End Sub
    Partial Private Sub OnASSPARFormatChanging(value As String)
    End Sub
    Partial Private Sub OnASSPARFormatChanged()
    End Sub
    Partial Private Sub OnTDIDDateFormatChanging(value As String)
    End Sub
    Partial Private Sub OnTDIDDateFormatChanged()
    End Sub
    Partial Private Sub OnIncludeInErrorsChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIncludeInErrorsChanged()
    End Sub
    Partial Private Sub OnFillAssparChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFillAssparChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCounty", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdCounty() As Integer
		Get
			Return Me._IdCounty
		End Get
		Set
			If ((Me._IdCounty = value)  _
						= false) Then
				Me.OnIdCountyChanging(value)
				Me.SendPropertyChanging
				Me._IdCounty = value
				Me.SendPropertyChanged("IdCounty")
				Me.OnIdCountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdState", DbType:="VarChar(2) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property IdState() As String
		Get
			Return Me._IdState
		End Get
		Set
			If (String.Equals(Me._IdState, value) = false) Then
				If Me._State.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdStateChanging(value)
				Me.SendPropertyChanging
				Me._IdState = value
				Me.SendPropertyChanged("IdState")
				Me.OnIdStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountyName", DbType:="VarChar(200) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property CountyName() As String
		Get
			Return Me._CountyName
		End Get
		Set
			If (String.Equals(Me._CountyName, value) = false) Then
				Me.OnCountyNameChanging(value)
				Me.SendPropertyChanging
				Me._CountyName = value
				Me.SendPropertyChanged("CountyName")
				Me.OnCountyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRRCode", DbType:="VarChar(5) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property CRRCode() As String
		Get
			Return Me._CRRCode
		End Get
		Set
			If (String.Equals(Me._CRRCode, value) = false) Then
				Me.OnCRRCodeChanging(value)
				Me.SendPropertyChanging
				Me._CRRCode = value
				Me.SendPropertyChanged("CRRCode")
				Me.OnCRRCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilePrefix", DbType:="VarChar(5) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property FilePrefix() As String
		Get
			Return Me._FilePrefix
		End Get
		Set
			If (String.Equals(Me._FilePrefix, value) = false) Then
				Me.OnFilePrefixChanging(value)
				Me.SendPropertyChanging
				Me._FilePrefix = value
				Me.SendPropertyChanged("FilePrefix")
				Me.OnFilePrefixChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPARFormat", DbType:="VarChar(30) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
	Public Property ASSPARFormat() As String
		Get
			Return Me._ASSPARFormat
		End Get
		Set
			If (String.Equals(Me._ASSPARFormat, value) = false) Then
				Me.OnASSPARFormatChanging(value)
				Me.SendPropertyChanging
				Me._ASSPARFormat = value
				Me.SendPropertyChanged("ASSPARFormat")
				Me.OnASSPARFormatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDIDDateFormat", DbType:="VarChar(20) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
	Public Property TDIDDateFormat() As String
		Get
			Return Me._TDIDDateFormat
		End Get
		Set
			If (String.Equals(Me._TDIDDateFormat, value) = false) Then
				Me.OnTDIDDateFormatChanging(value)
				Me.SendPropertyChanging
				Me._TDIDDateFormat = value
				Me.SendPropertyChanged("TDIDDateFormat")
				Me.OnTDIDDateFormatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IncludeInErrors", DbType:="Bit NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
	Public Property IncludeInErrors() As Boolean
		Get
			Return Me._IncludeInErrors
		End Get
		Set
			If ((Me._IncludeInErrors = value)  _
						= false) Then
				Me.OnIncludeInErrorsChanging(value)
				Me.SendPropertyChanging
				Me._IncludeInErrors = value
				Me.SendPropertyChanged("IncludeInErrors")
				Me.OnIncludeInErrorsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FillAsspar", DbType:="Bit NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
	Public Property FillAsspar() As Boolean
		Get
			Return Me._FillAsspar
		End Get
		Set
			If ((Me._FillAsspar = value)  _
						= false) Then
				Me.OnFillAssparChanging(value)
				Me.SendPropertyChanging
				Me._FillAsspar = value
				Me.SendPropertyChanged("FillAsspar")
				Me.OnFillAssparChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="State_County", Storage:="_State", ThisKey:="IdState", OtherKey:="IdState", IsForeignKey:=true)>  _
	Public Property State() As State
		Get
			Return Me._State.Entity
		End Get
		Set
			Dim previousValue As State = Me._State.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._State.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._State.Entity = Nothing
					previousValue.Counties.Remove(Me)
				End If
				Me._State.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Counties.Add(Me)
					Me._IdState = value.IdState
				Else
					Me._IdState = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("State")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub Initialize()
		Me._State = CType(Nothing, EntityRef(Of State))
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuario"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdUsuario As Integer
	
	Private _Usuario As String
	
	Private _Nombre As String
	
	Private _Password As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdUsuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdUsuarioChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdUsuario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdUsuario() As Integer
		Get
			Return Me._IdUsuario
		End Get
		Set
			If ((Me._IdUsuario = value)  _
						= false) Then
				Me.OnIdUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._IdUsuario = value
				Me.SendPropertyChanged("IdUsuario")
				Me.OnIdUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(20) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(100) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="VarChar(100) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub Initialize()
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ESTIMATED_VALUE"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class ESTIMATED_VALUE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _SA_PROPERTY_ID As String
	
	Private _ESTIMATED_PROP_VALUE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanged()
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_PROPERTY_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property SA_PROPERTY_ID() As String
		Get
			Return Me._SA_PROPERTY_ID
		End Get
		Set
			If (String.Equals(Me._SA_PROPERTY_ID, value) = false) Then
				Me.OnSA_PROPERTY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SA_PROPERTY_ID = value
				Me.SendPropertyChanged("SA_PROPERTY_ID")
				Me.OnSA_PROPERTY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTIMATED_PROP_VALUE", DbType:="VarChar(40)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property ESTIMATED_PROP_VALUE() As String
		Get
			Return Me._ESTIMATED_PROP_VALUE
		End Get
		Set
			If (String.Equals(Me._ESTIMATED_PROP_VALUE, value) = false) Then
				Me.OnESTIMATED_PROP_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._ESTIMATED_PROP_VALUE = value
				Me.SendPropertyChanged("ESTIMATED_PROP_VALUE")
				Me.OnESTIMATED_PROP_VALUEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub Initialize()
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NTS"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class NT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdNts As Integer
	
	Private _T_S_NO As String
	
	Private _LST As String
	
	Private _ADDRESS As String
	
	Private _CITY As String
	
	Private _ZIP As String
	
	Private _TG As String
	
	Private _HOEX As String
	
	Private _TRUSTOR As String
	
	Private _OWNER As String
	
	Private _TRUSTEE As String
	
	Private _T_PHONE As String
	
	Private _BENEFRY As String
	
	Private _B_PHONE As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _SALE_TIME As String
	
	Private _SITE As String
	
	Private _TAX_VALUE As String
	
	Private _TX_YR As String
	
	Private _PRCHS_DATE As System.Nullable(Of Date)
	
	Private _AMOUNT As String
	
	Private _TD1_A As String
	
	Private _TD1 As String
	
	Private _TD1_D As System.Nullable(Of Date)
	
	Private _TD2_A As String
	
	Private _TD2 As String
	
	Private _TD2_D As System.Nullable(Of Date)
	
	Private _TD3_A As String
	
	Private _TD3 As String
	
	Private _TD3_D As System.Nullable(Of Date)
	
	Private _TD4_A As String
	
	Private _TD4 As String
	
	Private _TD4_D As System.Nullable(Of Date)
	
	Private _TD5_A As String
	
	Private _TD5 As String
	
	Private _TD5_D As System.Nullable(Of Date)
	
	Private _TD6_A As String
	
	Private _TD6 As String
	
	Private _TD6_D As System.Nullable(Of Date)
	
	Private _USE As String
	
	Private _YRBLT As String
	
	Private _SQFT As String
	
	Private _STORY As String
	
	Private _ROOMS As String
	
	Private _LOT As String
	
	Private _LEGAL As String
	
	Private _ASSPAR As String
	
	Private _NOD As String
	
	Private _LOAN As String
	
	Private _NTS As String
	
	Private _TDID As String
	
	Private _REMARKS As String
	
	Private _COUNTY As String
	
	Private _L_DATE As System.Nullable(Of Date)
	
	Private _Created As Date
	
	Private _Modified As Date
	
	Private _IdStatus As Integer
	
	Private _IdStatusDBF As System.Nullable(Of Integer)
	
	Private _DateDBF As System.Nullable(Of Date)
	
	Private _Locked As Integer
	
	Private _SA_PROPERTY_ID As String
	
	Private _SR_UNIQUE_ID As String
	
	Private _OWNER1 As String
	
	Private _OWNER2 As String
	
	Private _TRUSTOR_FIRST_NAME As String
	
	Private _TRUSTOR_LAST_NAME As String
	
	Private _BATHROOMS As String
	
	Private _BEDROOMS As String
	
	Private _ADDRESS_ID_STATE As String
	
	Private _TR_PHONE As String
	
	Private _TRUSTEE_ADDRESS As String
	
	Private _TRUSTEE_CITY As String
	
	Private _TRUSTEE_ZIP As String
	
	Private _TRUSTEE_ADDRESS_ID_STATE As String
	
	Private _BENE_ADDRESS As String
	
	Private _BENE_CITY As String
	
	Private _BENE_ZIP As String
	
	Private _BENE_ADDRESS_ID_STATE As String
	
	Private _UNITS As String
	
	Private _ESTIMATED_PROP_VALUE As String
	
	Private _PROP_TAX_STATUS_1 As String
	
	Private _PROP_TAX_STATUS_2 As String
	
	Private _PROP_TAX_STATUS_3 As String
	
	Private _NBRROOMS As String
	
	Private _ST_HS_NBR As String
	
	Private _ST_FRACT As String
	
	Private _ST_DIR As String
	
	Private _ST_STRT As String
	
	Private _ST_SUF As String
	
	Private _ST_POSTD As String
	
	Private _ST_UNTPR As String
	
	Private _ST_UNTVL As String
	
	Private _ST_CITYSTATE As String
	
	Private _ML_HS_NBR As String
	
	Private _ML_FRACT As String
	
	Private _ML_DIR As String
	
	Private _ML_STRT As String
	
	Private _ML_SUF As String
	
	Private _ML_POSTD As String
	
	Private _ML_UNTPR As String
	
	Private _ML_UNTVL As String
	
	Private _ML_CITY As String
	
	Private _ML_STATE As String
	
	Private _ML_ZIP As String
	
	Private _ML_ZIPPLUS4 As String
	
	Private _TRUSTEE_HOUSE As String
	
	Private _TRUSTEE_STNAME As String
	
	Private _TRUSTEE_UNITNBR As String
	
	Private _BENE_HOUSE As String
	
	Private _BENE_STNAME As String
	
	Private _BENE_UNITNBR As String
	
	Private _SA_OWNR_SC As String
	
	Private _SA_POL_COD As String
	
	Private _SA_POL_SQF As String
	
	Private _SA_VW_CODE As String
	
	Private _NOD_REC_DT As System.Nullable(Of Date)
	
	Private _NTS_REC_DT As System.Nullable(Of Date)
	
	Private _ST_STATE As String
	
	Private _IdCounty As System.Nullable(Of Integer)
	
	Private _SA_ZONING As String
	
	Private _SA_VAL_TRANSFER As String
	
	Private _Status As EntityRef(Of Status)
	
	Private _StatusDBF As EntityRef(Of StatusDBF)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdNtsChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdNtsChanged()
    End Sub
    Partial Private Sub OnT_S_NOChanging(value As String)
    End Sub
    Partial Private Sub OnT_S_NOChanged()
    End Sub
    Partial Private Sub OnLSTChanging(value As String)
    End Sub
    Partial Private Sub OnLSTChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnTGChanging(value As String)
    End Sub
    Partial Private Sub OnTGChanged()
    End Sub
    Partial Private Sub OnHOEXChanging(value As String)
    End Sub
    Partial Private Sub OnHOEXChanged()
    End Sub
    Partial Private Sub OnTRUSTORChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTORChanged()
    End Sub
    Partial Private Sub OnOWNERChanging(value As String)
    End Sub
    Partial Private Sub OnOWNERChanged()
    End Sub
    Partial Private Sub OnTRUSTEEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEEChanged()
    End Sub
    Partial Private Sub OnT_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnT_PHONEChanged()
    End Sub
    Partial Private Sub OnBENEFRYChanging(value As String)
    End Sub
    Partial Private Sub OnBENEFRYChanged()
    End Sub
    Partial Private Sub OnB_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnB_PHONEChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSALE_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALE_TIMEChanged()
    End Sub
    Partial Private Sub OnSITEChanging(value As String)
    End Sub
    Partial Private Sub OnSITEChanged()
    End Sub
    Partial Private Sub OnTAX_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnTAX_VALUEChanged()
    End Sub
    Partial Private Sub OnTX_YRChanging(value As String)
    End Sub
    Partial Private Sub OnTX_YRChanged()
    End Sub
    Partial Private Sub OnPRCHS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPRCHS_DATEChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnTD1_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD1_AChanged()
    End Sub
    Partial Private Sub OnTD1Changing(value As String)
    End Sub
    Partial Private Sub OnTD1Changed()
    End Sub
    Partial Private Sub OnTD1_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD1_DChanged()
    End Sub
    Partial Private Sub OnTD2_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD2_AChanged()
    End Sub
    Partial Private Sub OnTD2Changing(value As String)
    End Sub
    Partial Private Sub OnTD2Changed()
    End Sub
    Partial Private Sub OnTD2_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD2_DChanged()
    End Sub
    Partial Private Sub OnTD3_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD3_AChanged()
    End Sub
    Partial Private Sub OnTD3Changing(value As String)
    End Sub
    Partial Private Sub OnTD3Changed()
    End Sub
    Partial Private Sub OnTD3_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD3_DChanged()
    End Sub
    Partial Private Sub OnTD4_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD4_AChanged()
    End Sub
    Partial Private Sub OnTD4Changing(value As String)
    End Sub
    Partial Private Sub OnTD4Changed()
    End Sub
    Partial Private Sub OnTD4_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD4_DChanged()
    End Sub
    Partial Private Sub OnTD5_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD5_AChanged()
    End Sub
    Partial Private Sub OnTD5Changing(value As String)
    End Sub
    Partial Private Sub OnTD5Changed()
    End Sub
    Partial Private Sub OnTD5_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD5_DChanged()
    End Sub
    Partial Private Sub OnTD6_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD6_AChanged()
    End Sub
    Partial Private Sub OnTD6Changing(value As String)
    End Sub
    Partial Private Sub OnTD6Changed()
    End Sub
    Partial Private Sub OnTD6_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD6_DChanged()
    End Sub
    Partial Private Sub OnUSEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEChanged()
    End Sub
    Partial Private Sub OnYRBLTChanging(value As String)
    End Sub
    Partial Private Sub OnYRBLTChanged()
    End Sub
    Partial Private Sub OnSQFTChanging(value As String)
    End Sub
    Partial Private Sub OnSQFTChanged()
    End Sub
    Partial Private Sub OnSTORYChanging(value As String)
    End Sub
    Partial Private Sub OnSTORYChanged()
    End Sub
    Partial Private Sub OnROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnROOMSChanged()
    End Sub
    Partial Private Sub OnLOTChanging(value As String)
    End Sub
    Partial Private Sub OnLOTChanged()
    End Sub
    Partial Private Sub OnLEGALChanging(value As String)
    End Sub
    Partial Private Sub OnLEGALChanged()
    End Sub
    Partial Private Sub OnASSPARChanging(value As String)
    End Sub
    Partial Private Sub OnASSPARChanged()
    End Sub
    Partial Private Sub OnNODChanging(value As String)
    End Sub
    Partial Private Sub OnNODChanged()
    End Sub
    Partial Private Sub OnLOANChanging(value As String)
    End Sub
    Partial Private Sub OnLOANChanged()
    End Sub
    Partial Private Sub OnNTSChanging(value As String)
    End Sub
    Partial Private Sub OnNTSChanged()
    End Sub
    Partial Private Sub OnTDIDChanging(value As String)
    End Sub
    Partial Private Sub OnTDIDChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnCOUNTYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTYChanged()
    End Sub
    Partial Private Sub OnL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnL_DATEChanged()
    End Sub
    Partial Private Sub OnCreatedChanging(value As Date)
    End Sub
    Partial Private Sub OnCreatedChanged()
    End Sub
    Partial Private Sub OnModifiedChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedChanged()
    End Sub
    Partial Private Sub OnIdStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdStatusChanged()
    End Sub
    Partial Private Sub OnIdStatusDBFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdStatusDBFChanged()
    End Sub
    Partial Private Sub OnDateDBFChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateDBFChanged()
    End Sub
    Partial Private Sub OnLockedChanging(value As Integer)
    End Sub
    Partial Private Sub OnLockedChanged()
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanged()
    End Sub
    Partial Private Sub OnSR_UNIQUE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSR_UNIQUE_IDChanged()
    End Sub
    Partial Private Sub OnOWNER1Changing(value As String)
    End Sub
    Partial Private Sub OnOWNER1Changed()
    End Sub
    Partial Private Sub OnOWNER2Changing(value As String)
    End Sub
    Partial Private Sub OnOWNER2Changed()
    End Sub
    Partial Private Sub OnTRUSTOR_FIRST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTOR_FIRST_NAMEChanged()
    End Sub
    Partial Private Sub OnTRUSTOR_LAST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTOR_LAST_NAMEChanged()
    End Sub
    Partial Private Sub OnBATHROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnBATHROOMSChanged()
    End Sub
    Partial Private Sub OnBEDROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnBEDROOMSChanged()
    End Sub
    Partial Private Sub OnADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnTR_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnTR_PHONEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESSChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_CITYChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ZIPChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnBENE_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ADDRESSChanged()
    End Sub
    Partial Private Sub OnBENE_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_CITYChanged()
    End Sub
    Partial Private Sub OnBENE_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ZIPChanged()
    End Sub
    Partial Private Sub OnBENE_ADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnUNITSChanging(value As String)
    End Sub
    Partial Private Sub OnUNITSChanged()
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanged()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_1Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_1Changed()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_2Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_2Changed()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_3Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_3Changed()
    End Sub
    Partial Private Sub OnNBRROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnNBRROOMSChanged()
    End Sub
    Partial Private Sub OnST_HS_NBRChanging(value As String)
    End Sub
    Partial Private Sub OnST_HS_NBRChanged()
    End Sub
    Partial Private Sub OnST_FRACTChanging(value As String)
    End Sub
    Partial Private Sub OnST_FRACTChanged()
    End Sub
    Partial Private Sub OnST_DIRChanging(value As String)
    End Sub
    Partial Private Sub OnST_DIRChanged()
    End Sub
    Partial Private Sub OnST_STRTChanging(value As String)
    End Sub
    Partial Private Sub OnST_STRTChanged()
    End Sub
    Partial Private Sub OnST_SUFChanging(value As String)
    End Sub
    Partial Private Sub OnST_SUFChanged()
    End Sub
    Partial Private Sub OnST_POSTDChanging(value As String)
    End Sub
    Partial Private Sub OnST_POSTDChanged()
    End Sub
    Partial Private Sub OnST_UNTPRChanging(value As String)
    End Sub
    Partial Private Sub OnST_UNTPRChanged()
    End Sub
    Partial Private Sub OnST_UNTVLChanging(value As String)
    End Sub
    Partial Private Sub OnST_UNTVLChanged()
    End Sub
    Partial Private Sub OnST_CITYSTATEChanging(value As String)
    End Sub
    Partial Private Sub OnST_CITYSTATEChanged()
    End Sub
    Partial Private Sub OnML_HS_NBRChanging(value As String)
    End Sub
    Partial Private Sub OnML_HS_NBRChanged()
    End Sub
    Partial Private Sub OnML_FRACTChanging(value As String)
    End Sub
    Partial Private Sub OnML_FRACTChanged()
    End Sub
    Partial Private Sub OnML_DIRChanging(value As String)
    End Sub
    Partial Private Sub OnML_DIRChanged()
    End Sub
    Partial Private Sub OnML_STRTChanging(value As String)
    End Sub
    Partial Private Sub OnML_STRTChanged()
    End Sub
    Partial Private Sub OnML_SUFChanging(value As String)
    End Sub
    Partial Private Sub OnML_SUFChanged()
    End Sub
    Partial Private Sub OnML_POSTDChanging(value As String)
    End Sub
    Partial Private Sub OnML_POSTDChanged()
    End Sub
    Partial Private Sub OnML_UNTPRChanging(value As String)
    End Sub
    Partial Private Sub OnML_UNTPRChanged()
    End Sub
    Partial Private Sub OnML_UNTVLChanging(value As String)
    End Sub
    Partial Private Sub OnML_UNTVLChanged()
    End Sub
    Partial Private Sub OnML_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnML_CITYChanged()
    End Sub
    Partial Private Sub OnML_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnML_STATEChanged()
    End Sub
    Partial Private Sub OnML_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnML_ZIPChanged()
    End Sub
    Partial Private Sub OnML_ZIPPLUS4Changing(value As String)
    End Sub
    Partial Private Sub OnML_ZIPPLUS4Changed()
    End Sub
    Partial Private Sub OnTRUSTEE_HOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_HOUSEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_STNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_STNAMEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_UNITNBRChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_UNITNBRChanged()
    End Sub
    Partial Private Sub OnBENE_HOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_HOUSEChanged()
    End Sub
    Partial Private Sub OnBENE_STNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_STNAMEChanged()
    End Sub
    Partial Private Sub OnBENE_UNITNBRChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_UNITNBRChanged()
    End Sub
    Partial Private Sub OnSA_OWNR_SCChanging(value As String)
    End Sub
    Partial Private Sub OnSA_OWNR_SCChanged()
    End Sub
    Partial Private Sub OnSA_POL_CODChanging(value As String)
    End Sub
    Partial Private Sub OnSA_POL_CODChanged()
    End Sub
    Partial Private Sub OnSA_POL_SQFChanging(value As String)
    End Sub
    Partial Private Sub OnSA_POL_SQFChanged()
    End Sub
    Partial Private Sub OnSA_VW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSA_VW_CODEChanged()
    End Sub
    Partial Private Sub OnNOD_REC_DTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNOD_REC_DTChanged()
    End Sub
    Partial Private Sub OnNTS_REC_DTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNTS_REC_DTChanged()
    End Sub
    Partial Private Sub OnST_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnST_STATEChanged()
    End Sub
    Partial Private Sub OnIdCountyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCountyChanged()
    End Sub
    Partial Private Sub OnSA_ZONINGChanging(value As String)
    End Sub
    Partial Private Sub OnSA_ZONINGChanged()
    End Sub
    Partial Private Sub OnSA_VAL_TRANSFERChanging(value As String)
    End Sub
    Partial Private Sub OnSA_VAL_TRANSFERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdNts", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdNts() As Integer
		Get
			Return Me._IdNts
		End Get
		Set
			If ((Me._IdNts = value)  _
						= false) Then
				Me.OnIdNtsChanging(value)
				Me.SendPropertyChanging
				Me._IdNts = value
				Me.SendPropertyChanged("IdNts")
				Me.OnIdNtsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T_S_NO", DbType:="VarChar(15)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property T_S_NO() As String
		Get
			Return Me._T_S_NO
		End Get
		Set
			If (String.Equals(Me._T_S_NO, value) = false) Then
				Me.OnT_S_NOChanging(value)
				Me.SendPropertyChanging
				Me._T_S_NO = value
				Me.SendPropertyChanged("T_S_NO")
				Me.OnT_S_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LST", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property LST() As String
		Get
			Return Me._LST
		End Get
		Set
			If (String.Equals(Me._LST, value) = false) Then
				Me.OnLSTChanging(value)
				Me.SendPropertyChanging
				Me._LST = value
				Me.SendPropertyChanged("LST")
				Me.OnLSTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(39)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(22)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property CITY() As String
		Get
			Return Me._CITY
		End Get
		Set
			If (String.Equals(Me._CITY, value) = false) Then
				Me.OnCITYChanging(value)
				Me.SendPropertyChanging
				Me._CITY = value
				Me.SendPropertyChanged("CITY")
				Me.OnCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
	Public Property ZIP() As String
		Get
			Return Me._ZIP
		End Get
		Set
			If (String.Equals(Me._ZIP, value) = false) Then
				Me.OnZIPChanging(value)
				Me.SendPropertyChanging
				Me._ZIP = value
				Me.SendPropertyChanged("ZIP")
				Me.OnZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TG", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
	Public Property TG() As String
		Get
			Return Me._TG
		End Get
		Set
			If (String.Equals(Me._TG, value) = false) Then
				Me.OnTGChanging(value)
				Me.SendPropertyChanging
				Me._TG = value
				Me.SendPropertyChanged("TG")
				Me.OnTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOEX", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
	Public Property HOEX() As String
		Get
			Return Me._HOEX
		End Get
		Set
			If (String.Equals(Me._HOEX, value) = false) Then
				Me.OnHOEXChanging(value)
				Me.SendPropertyChanging
				Me._HOEX = value
				Me.SendPropertyChanged("HOEX")
				Me.OnHOEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
	Public Property TRUSTOR() As String
		Get
			Return Me._TRUSTOR
		End Get
		Set
			If (String.Equals(Me._TRUSTOR, value) = false) Then
				Me.OnTRUSTORChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR = value
				Me.SendPropertyChanged("TRUSTOR")
				Me.OnTRUSTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
	Public Property OWNER() As String
		Get
			Return Me._OWNER
		End Get
		Set
			If (String.Equals(Me._OWNER, value) = false) Then
				Me.OnOWNERChanging(value)
				Me.SendPropertyChanging
				Me._OWNER = value
				Me.SendPropertyChanged("OWNER")
				Me.OnOWNERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE", DbType:="VarChar(38)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
	Public Property TRUSTEE() As String
		Get
			Return Me._TRUSTEE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE, value) = false) Then
				Me.OnTRUSTEEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE = value
				Me.SendPropertyChanged("TRUSTEE")
				Me.OnTRUSTEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
	Public Property T_PHONE() As String
		Get
			Return Me._T_PHONE
		End Get
		Set
			If (String.Equals(Me._T_PHONE, value) = false) Then
				Me.OnT_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._T_PHONE = value
				Me.SendPropertyChanged("T_PHONE")
				Me.OnT_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENEFRY", DbType:="VarChar(38)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
	Public Property BENEFRY() As String
		Get
			Return Me._BENEFRY
		End Get
		Set
			If (String.Equals(Me._BENEFRY, value) = false) Then
				Me.OnBENEFRYChanging(value)
				Me.SendPropertyChanging
				Me._BENEFRY = value
				Me.SendPropertyChanged("BENEFRY")
				Me.OnBENEFRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
	Public Property B_PHONE() As String
		Get
			Return Me._B_PHONE
		End Get
		Set
			If (String.Equals(Me._B_PHONE, value) = false) Then
				Me.OnB_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._B_PHONE = value
				Me.SendPropertyChanged("B_PHONE")
				Me.OnB_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_TIME", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
	Public Property SALE_TIME() As String
		Get
			Return Me._SALE_TIME
		End Get
		Set
			If (String.Equals(Me._SALE_TIME, value) = false) Then
				Me.OnSALE_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_TIME = value
				Me.SendPropertyChanged("SALE_TIME")
				Me.OnSALE_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SITE", DbType:="VarChar(48)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
	Public Property SITE() As String
		Get
			Return Me._SITE
		End Get
		Set
			If (String.Equals(Me._SITE, value) = false) Then
				Me.OnSITEChanging(value)
				Me.SendPropertyChanging
				Me._SITE = value
				Me.SendPropertyChanged("SITE")
				Me.OnSITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX_VALUE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
	Public Property TAX_VALUE() As String
		Get
			Return Me._TAX_VALUE
		End Get
		Set
			If (String.Equals(Me._TAX_VALUE, value) = false) Then
				Me.OnTAX_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._TAX_VALUE = value
				Me.SendPropertyChanged("TAX_VALUE")
				Me.OnTAX_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TX_YR", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
	Public Property TX_YR() As String
		Get
			Return Me._TX_YR
		End Get
		Set
			If (String.Equals(Me._TX_YR, value) = false) Then
				Me.OnTX_YRChanging(value)
				Me.SendPropertyChanging
				Me._TX_YR = value
				Me.SendPropertyChanged("TX_YR")
				Me.OnTX_YRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCHS_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
	Public Property PRCHS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PRCHS_DATE
		End Get
		Set
			If (Me._PRCHS_DATE.Equals(value) = false) Then
				Me.OnPRCHS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PRCHS_DATE = value
				Me.SendPropertyChanged("PRCHS_DATE")
				Me.OnPRCHS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
	Public Property AMOUNT() As String
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (String.Equals(Me._AMOUNT, value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
	Public Property TD1_A() As String
		Get
			Return Me._TD1_A
		End Get
		Set
			If (String.Equals(Me._TD1_A, value) = false) Then
				Me.OnTD1_AChanging(value)
				Me.SendPropertyChanging
				Me._TD1_A = value
				Me.SendPropertyChanged("TD1_A")
				Me.OnTD1_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
	Public Property TD1() As String
		Get
			Return Me._TD1
		End Get
		Set
			If (String.Equals(Me._TD1, value) = false) Then
				Me.OnTD1Changing(value)
				Me.SendPropertyChanging
				Me._TD1 = value
				Me.SendPropertyChanged("TD1")
				Me.OnTD1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
	Public Property TD1_D() As System.Nullable(Of Date)
		Get
			Return Me._TD1_D
		End Get
		Set
			If (Me._TD1_D.Equals(value) = false) Then
				Me.OnTD1_DChanging(value)
				Me.SendPropertyChanging
				Me._TD1_D = value
				Me.SendPropertyChanged("TD1_D")
				Me.OnTD1_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
	Public Property TD2_A() As String
		Get
			Return Me._TD2_A
		End Get
		Set
			If (String.Equals(Me._TD2_A, value) = false) Then
				Me.OnTD2_AChanging(value)
				Me.SendPropertyChanging
				Me._TD2_A = value
				Me.SendPropertyChanged("TD2_A")
				Me.OnTD2_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
	Public Property TD2() As String
		Get
			Return Me._TD2
		End Get
		Set
			If (String.Equals(Me._TD2, value) = false) Then
				Me.OnTD2Changing(value)
				Me.SendPropertyChanging
				Me._TD2 = value
				Me.SendPropertyChanged("TD2")
				Me.OnTD2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
	Public Property TD2_D() As System.Nullable(Of Date)
		Get
			Return Me._TD2_D
		End Get
		Set
			If (Me._TD2_D.Equals(value) = false) Then
				Me.OnTD2_DChanging(value)
				Me.SendPropertyChanging
				Me._TD2_D = value
				Me.SendPropertyChanged("TD2_D")
				Me.OnTD2_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
	Public Property TD3_A() As String
		Get
			Return Me._TD3_A
		End Get
		Set
			If (String.Equals(Me._TD3_A, value) = false) Then
				Me.OnTD3_AChanging(value)
				Me.SendPropertyChanging
				Me._TD3_A = value
				Me.SendPropertyChanged("TD3_A")
				Me.OnTD3_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
	Public Property TD3() As String
		Get
			Return Me._TD3
		End Get
		Set
			If (String.Equals(Me._TD3, value) = false) Then
				Me.OnTD3Changing(value)
				Me.SendPropertyChanging
				Me._TD3 = value
				Me.SendPropertyChanged("TD3")
				Me.OnTD3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=30)>  _
	Public Property TD3_D() As System.Nullable(Of Date)
		Get
			Return Me._TD3_D
		End Get
		Set
			If (Me._TD3_D.Equals(value) = false) Then
				Me.OnTD3_DChanging(value)
				Me.SendPropertyChanging
				Me._TD3_D = value
				Me.SendPropertyChanged("TD3_D")
				Me.OnTD3_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=31)>  _
	Public Property TD4_A() As String
		Get
			Return Me._TD4_A
		End Get
		Set
			If (String.Equals(Me._TD4_A, value) = false) Then
				Me.OnTD4_AChanging(value)
				Me.SendPropertyChanging
				Me._TD4_A = value
				Me.SendPropertyChanged("TD4_A")
				Me.OnTD4_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=32)>  _
	Public Property TD4() As String
		Get
			Return Me._TD4
		End Get
		Set
			If (String.Equals(Me._TD4, value) = false) Then
				Me.OnTD4Changing(value)
				Me.SendPropertyChanging
				Me._TD4 = value
				Me.SendPropertyChanged("TD4")
				Me.OnTD4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=33)>  _
	Public Property TD4_D() As System.Nullable(Of Date)
		Get
			Return Me._TD4_D
		End Get
		Set
			If (Me._TD4_D.Equals(value) = false) Then
				Me.OnTD4_DChanging(value)
				Me.SendPropertyChanging
				Me._TD4_D = value
				Me.SendPropertyChanged("TD4_D")
				Me.OnTD4_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=34)>  _
	Public Property TD5_A() As String
		Get
			Return Me._TD5_A
		End Get
		Set
			If (String.Equals(Me._TD5_A, value) = false) Then
				Me.OnTD5_AChanging(value)
				Me.SendPropertyChanging
				Me._TD5_A = value
				Me.SendPropertyChanged("TD5_A")
				Me.OnTD5_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=35)>  _
	Public Property TD5() As String
		Get
			Return Me._TD5
		End Get
		Set
			If (String.Equals(Me._TD5, value) = false) Then
				Me.OnTD5Changing(value)
				Me.SendPropertyChanging
				Me._TD5 = value
				Me.SendPropertyChanged("TD5")
				Me.OnTD5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=36)>  _
	Public Property TD5_D() As System.Nullable(Of Date)
		Get
			Return Me._TD5_D
		End Get
		Set
			If (Me._TD5_D.Equals(value) = false) Then
				Me.OnTD5_DChanging(value)
				Me.SendPropertyChanging
				Me._TD5_D = value
				Me.SendPropertyChanged("TD5_D")
				Me.OnTD5_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6_A", DbType:="VarChar(1)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=37)>  _
	Public Property TD6_A() As String
		Get
			Return Me._TD6_A
		End Get
		Set
			If (String.Equals(Me._TD6_A, value) = false) Then
				Me.OnTD6_AChanging(value)
				Me.SendPropertyChanging
				Me._TD6_A = value
				Me.SendPropertyChanged("TD6_A")
				Me.OnTD6_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=38)>  _
	Public Property TD6() As String
		Get
			Return Me._TD6
		End Get
		Set
			If (String.Equals(Me._TD6, value) = false) Then
				Me.OnTD6Changing(value)
				Me.SendPropertyChanging
				Me._TD6 = value
				Me.SendPropertyChanged("TD6")
				Me.OnTD6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=39)>  _
	Public Property TD6_D() As System.Nullable(Of Date)
		Get
			Return Me._TD6_D
		End Get
		Set
			If (Me._TD6_D.Equals(value) = false) Then
				Me.OnTD6_DChanging(value)
				Me.SendPropertyChanging
				Me._TD6_D = value
				Me.SendPropertyChanged("TD6_D")
				Me.OnTD6_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[USE]", Storage:="_USE", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=40)>  _
	Public Property USE() As String
		Get
			Return Me._USE
		End Get
		Set
			If (String.Equals(Me._USE, value) = false) Then
				Me.OnUSEChanging(value)
				Me.SendPropertyChanging
				Me._USE = value
				Me.SendPropertyChanged("USE")
				Me.OnUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YRBLT", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=41)>  _
	Public Property YRBLT() As String
		Get
			Return Me._YRBLT
		End Get
		Set
			If (String.Equals(Me._YRBLT, value) = false) Then
				Me.OnYRBLTChanging(value)
				Me.SendPropertyChanging
				Me._YRBLT = value
				Me.SendPropertyChanged("YRBLT")
				Me.OnYRBLTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SQFT", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=42)>  _
	Public Property SQFT() As String
		Get
			Return Me._SQFT
		End Get
		Set
			If (String.Equals(Me._SQFT, value) = false) Then
				Me.OnSQFTChanging(value)
				Me.SendPropertyChanging
				Me._SQFT = value
				Me.SendPropertyChanged("SQFT")
				Me.OnSQFTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORY", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=43)>  _
	Public Property STORY() As String
		Get
			Return Me._STORY
		End Get
		Set
			If (String.Equals(Me._STORY, value) = false) Then
				Me.OnSTORYChanging(value)
				Me.SendPropertyChanging
				Me._STORY = value
				Me.SendPropertyChanged("STORY")
				Me.OnSTORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMS", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=44)>  _
	Public Property ROOMS() As String
		Get
			Return Me._ROOMS
		End Get
		Set
			If (String.Equals(Me._ROOMS, value) = false) Then
				Me.OnROOMSChanging(value)
				Me.SendPropertyChanging
				Me._ROOMS = value
				Me.SendPropertyChanged("ROOMS")
				Me.OnROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT", DbType:="VarChar(7)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=45)>  _
	Public Property LOT() As String
		Get
			Return Me._LOT
		End Get
		Set
			If (String.Equals(Me._LOT, value) = false) Then
				Me.OnLOTChanging(value)
				Me.SendPropertyChanging
				Me._LOT = value
				Me.SendPropertyChanged("LOT")
				Me.OnLOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEGAL", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=46)>  _
	Public Property LEGAL() As String
		Get
			Return Me._LEGAL
		End Get
		Set
			If (String.Equals(Me._LEGAL, value) = false) Then
				Me.OnLEGALChanging(value)
				Me.SendPropertyChanging
				Me._LEGAL = value
				Me.SendPropertyChanged("LEGAL")
				Me.OnLEGALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPAR", DbType:="VarChar(23)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=47)>  _
	Public Property ASSPAR() As String
		Get
			Return Me._ASSPAR
		End Get
		Set
			If (String.Equals(Me._ASSPAR, value) = false) Then
				Me.OnASSPARChanging(value)
				Me.SendPropertyChanging
				Me._ASSPAR = value
				Me.SendPropertyChanged("ASSPAR")
				Me.OnASSPARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOD", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=48)>  _
	Public Property NOD() As String
		Get
			Return Me._NOD
		End Get
		Set
			If (String.Equals(Me._NOD, value) = false) Then
				Me.OnNODChanging(value)
				Me.SendPropertyChanging
				Me._NOD = value
				Me.SendPropertyChanged("NOD")
				Me.OnNODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOAN", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=49)>  _
	Public Property LOAN() As String
		Get
			Return Me._LOAN
		End Get
		Set
			If (String.Equals(Me._LOAN, value) = false) Then
				Me.OnLOANChanging(value)
				Me.SendPropertyChanging
				Me._LOAN = value
				Me.SendPropertyChanged("LOAN")
				Me.OnLOANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS", DbType:="VarChar(14)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=50)>  _
	Public Property NTS() As String
		Get
			Return Me._NTS
		End Get
		Set
			If (String.Equals(Me._NTS, value) = false) Then
				Me.OnNTSChanging(value)
				Me.SendPropertyChanging
				Me._NTS = value
				Me.SendPropertyChanged("NTS")
				Me.OnNTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=51)>  _
	Public Property TDID() As String
		Get
			Return Me._TDID
		End Get
		Set
			If (String.Equals(Me._TDID, value) = false) Then
				Me.OnTDIDChanging(value)
				Me.SendPropertyChanging
				Me._TDID = value
				Me.SendPropertyChanged("TDID")
				Me.OnTDIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(124)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=52)>  _
	Public Property REMARKS() As String
		Get
			Return Me._REMARKS
		End Get
		Set
			If (String.Equals(Me._REMARKS, value) = false) Then
				Me.OnREMARKSChanging(value)
				Me.SendPropertyChanging
				Me._REMARKS = value
				Me.SendPropertyChanged("REMARKS")
				Me.OnREMARKSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTY", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=53)>  _
	Public Property COUNTY() As String
		Get
			Return Me._COUNTY
		End Get
		Set
			If (String.Equals(Me._COUNTY, value) = false) Then
				Me.OnCOUNTYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTY = value
				Me.SendPropertyChanged("COUNTY")
				Me.OnCOUNTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_L_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=54)>  _
	Public Property L_DATE() As System.Nullable(Of Date)
		Get
			Return Me._L_DATE
		End Get
		Set
			If (Me._L_DATE.Equals(value) = false) Then
				Me.OnL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._L_DATE = value
				Me.SendPropertyChanged("L_DATE")
				Me.OnL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created", DbType:="DateTime NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=55)>  _
	Public Property Created() As Date
		Get
			Return Me._Created
		End Get
		Set
			If ((Me._Created = value)  _
						= false) Then
				Me.OnCreatedChanging(value)
				Me.SendPropertyChanging
				Me._Created = value
				Me.SendPropertyChanged("Created")
				Me.OnCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modified", DbType:="DateTime NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=56)>  _
	Public Property Modified() As Date
		Get
			Return Me._Modified
		End Get
		Set
			If ((Me._Modified = value)  _
						= false) Then
				Me.OnModifiedChanging(value)
				Me.SendPropertyChanging
				Me._Modified = value
				Me.SendPropertyChanged("Modified")
				Me.OnModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatus", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=57)>  _
	Public Property IdStatus() As Integer
		Get
			Return Me._IdStatus
		End Get
		Set
			If ((Me._IdStatus = value)  _
						= false) Then
				If Me._Status.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdStatusChanging(value)
				Me.SendPropertyChanging
				Me._IdStatus = value
				Me.SendPropertyChanged("IdStatus")
				Me.OnIdStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatusDBF", DbType:="Int"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=58)>  _
	Public Property IdStatusDBF() As System.Nullable(Of Integer)
		Get
			Return Me._IdStatusDBF
		End Get
		Set
			If (Me._IdStatusDBF.Equals(value) = false) Then
				If Me._StatusDBF.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdStatusDBFChanging(value)
				Me.SendPropertyChanging
				Me._IdStatusDBF = value
				Me.SendPropertyChanged("IdStatusDBF")
				Me.OnIdStatusDBFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDBF", DbType:="DateTime"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=59)>  _
	Public Property DateDBF() As System.Nullable(Of Date)
		Get
			Return Me._DateDBF
		End Get
		Set
			If (Me._DateDBF.Equals(value) = false) Then
				Me.OnDateDBFChanging(value)
				Me.SendPropertyChanging
				Me._DateDBF = value
				Me.SendPropertyChanged("DateDBF")
				Me.OnDateDBFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=60)>  _
	Public Property Locked() As Integer
		Get
			Return Me._Locked
		End Get
		Set
			If ((Me._Locked = value)  _
						= false) Then
				Me.OnLockedChanging(value)
				Me.SendPropertyChanging
				Me._Locked = value
				Me.SendPropertyChanged("Locked")
				Me.OnLockedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_PROPERTY_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=61)>  _
	Public Property SA_PROPERTY_ID() As String
		Get
			Return Me._SA_PROPERTY_ID
		End Get
		Set
			If (String.Equals(Me._SA_PROPERTY_ID, value) = false) Then
				Me.OnSA_PROPERTY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SA_PROPERTY_ID = value
				Me.SendPropertyChanged("SA_PROPERTY_ID")
				Me.OnSA_PROPERTY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SR_UNIQUE_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=62)>  _
	Public Property SR_UNIQUE_ID() As String
		Get
			Return Me._SR_UNIQUE_ID
		End Get
		Set
			If (String.Equals(Me._SR_UNIQUE_ID, value) = false) Then
				Me.OnSR_UNIQUE_IDChanging(value)
				Me.SendPropertyChanging
				Me._SR_UNIQUE_ID = value
				Me.SendPropertyChanged("SR_UNIQUE_ID")
				Me.OnSR_UNIQUE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER1", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=63)>  _
	Public Property OWNER1() As String
		Get
			Return Me._OWNER1
		End Get
		Set
			If (String.Equals(Me._OWNER1, value) = false) Then
				Me.OnOWNER1Changing(value)
				Me.SendPropertyChanging
				Me._OWNER1 = value
				Me.SendPropertyChanged("OWNER1")
				Me.OnOWNER1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER2", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=64)>  _
	Public Property OWNER2() As String
		Get
			Return Me._OWNER2
		End Get
		Set
			If (String.Equals(Me._OWNER2, value) = false) Then
				Me.OnOWNER2Changing(value)
				Me.SendPropertyChanging
				Me._OWNER2 = value
				Me.SendPropertyChanged("OWNER2")
				Me.OnOWNER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR_FIRST_NAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=65)>  _
	Public Property TRUSTOR_FIRST_NAME() As String
		Get
			Return Me._TRUSTOR_FIRST_NAME
		End Get
		Set
			If (String.Equals(Me._TRUSTOR_FIRST_NAME, value) = false) Then
				Me.OnTRUSTOR_FIRST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR_FIRST_NAME = value
				Me.SendPropertyChanged("TRUSTOR_FIRST_NAME")
				Me.OnTRUSTOR_FIRST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR_LAST_NAME", DbType:="VarChar(25)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=66)>  _
	Public Property TRUSTOR_LAST_NAME() As String
		Get
			Return Me._TRUSTOR_LAST_NAME
		End Get
		Set
			If (String.Equals(Me._TRUSTOR_LAST_NAME, value) = false) Then
				Me.OnTRUSTOR_LAST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR_LAST_NAME = value
				Me.SendPropertyChanged("TRUSTOR_LAST_NAME")
				Me.OnTRUSTOR_LAST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BATHROOMS", DbType:="VarChar(16)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=67)>  _
	Public Property BATHROOMS() As String
		Get
			Return Me._BATHROOMS
		End Get
		Set
			If (String.Equals(Me._BATHROOMS, value) = false) Then
				Me.OnBATHROOMSChanging(value)
				Me.SendPropertyChanging
				Me._BATHROOMS = value
				Me.SendPropertyChanged("BATHROOMS")
				Me.OnBATHROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BEDROOMS", DbType:="VarChar(16)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=68)>  _
	Public Property BEDROOMS() As String
		Get
			Return Me._BEDROOMS
		End Get
		Set
			If (String.Equals(Me._BEDROOMS, value) = false) Then
				Me.OnBEDROOMSChanging(value)
				Me.SendPropertyChanging
				Me._BEDROOMS = value
				Me.SendPropertyChanged("BEDROOMS")
				Me.OnBEDROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=69)>  _
	Public Property ADDRESS_ID_STATE() As String
		Get
			Return Me._ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._ADDRESS_ID_STATE, value) = false) Then
				Me.OnADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("ADDRESS_ID_STATE")
				Me.OnADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=70)>  _
	Public Property TR_PHONE() As String
		Get
			Return Me._TR_PHONE
		End Get
		Set
			If (String.Equals(Me._TR_PHONE, value) = false) Then
				Me.OnTR_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._TR_PHONE = value
				Me.SendPropertyChanged("TR_PHONE")
				Me.OnTR_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ADDRESS", DbType:="VarChar(78)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=71)>  _
	Public Property TRUSTEE_ADDRESS() As String
		Get
			Return Me._TRUSTEE_ADDRESS
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ADDRESS, value) = false) Then
				Me.OnTRUSTEE_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ADDRESS = value
				Me.SendPropertyChanged("TRUSTEE_ADDRESS")
				Me.OnTRUSTEE_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_CITY", DbType:="VarChar(44)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=72)>  _
	Public Property TRUSTEE_CITY() As String
		Get
			Return Me._TRUSTEE_CITY
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_CITY, value) = false) Then
				Me.OnTRUSTEE_CITYChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_CITY = value
				Me.SendPropertyChanged("TRUSTEE_CITY")
				Me.OnTRUSTEE_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ZIP", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=73)>  _
	Public Property TRUSTEE_ZIP() As String
		Get
			Return Me._TRUSTEE_ZIP
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ZIP, value) = false) Then
				Me.OnTRUSTEE_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ZIP = value
				Me.SendPropertyChanged("TRUSTEE_ZIP")
				Me.OnTRUSTEE_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=74)>  _
	Public Property TRUSTEE_ADDRESS_ID_STATE() As String
		Get
			Return Me._TRUSTEE_ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ADDRESS_ID_STATE, value) = false) Then
				Me.OnTRUSTEE_ADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("TRUSTEE_ADDRESS_ID_STATE")
				Me.OnTRUSTEE_ADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ADDRESS", DbType:="VarChar(78)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=75)>  _
	Public Property BENE_ADDRESS() As String
		Get
			Return Me._BENE_ADDRESS
		End Get
		Set
			If (String.Equals(Me._BENE_ADDRESS, value) = false) Then
				Me.OnBENE_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ADDRESS = value
				Me.SendPropertyChanged("BENE_ADDRESS")
				Me.OnBENE_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_CITY", DbType:="VarChar(44)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=76)>  _
	Public Property BENE_CITY() As String
		Get
			Return Me._BENE_CITY
		End Get
		Set
			If (String.Equals(Me._BENE_CITY, value) = false) Then
				Me.OnBENE_CITYChanging(value)
				Me.SendPropertyChanging
				Me._BENE_CITY = value
				Me.SendPropertyChanged("BENE_CITY")
				Me.OnBENE_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ZIP", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=77)>  _
	Public Property BENE_ZIP() As String
		Get
			Return Me._BENE_ZIP
		End Get
		Set
			If (String.Equals(Me._BENE_ZIP, value) = false) Then
				Me.OnBENE_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ZIP = value
				Me.SendPropertyChanged("BENE_ZIP")
				Me.OnBENE_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=78)>  _
	Public Property BENE_ADDRESS_ID_STATE() As String
		Get
			Return Me._BENE_ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._BENE_ADDRESS_ID_STATE, value) = false) Then
				Me.OnBENE_ADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("BENE_ADDRESS_ID_STATE")
				Me.OnBENE_ADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITS", DbType:="VarChar(16)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=79)>  _
	Public Property UNITS() As String
		Get
			Return Me._UNITS
		End Get
		Set
			If (String.Equals(Me._UNITS, value) = false) Then
				Me.OnUNITSChanging(value)
				Me.SendPropertyChanging
				Me._UNITS = value
				Me.SendPropertyChanged("UNITS")
				Me.OnUNITSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTIMATED_PROP_VALUE", DbType:="VarChar(40)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=80)>  _
	Public Property ESTIMATED_PROP_VALUE() As String
		Get
			Return Me._ESTIMATED_PROP_VALUE
		End Get
		Set
			If (String.Equals(Me._ESTIMATED_PROP_VALUE, value) = false) Then
				Me.OnESTIMATED_PROP_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._ESTIMATED_PROP_VALUE = value
				Me.SendPropertyChanged("ESTIMATED_PROP_VALUE")
				Me.OnESTIMATED_PROP_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_1", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=81)>  _
	Public Property PROP_TAX_STATUS_1() As String
		Get
			Return Me._PROP_TAX_STATUS_1
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_1, value) = false) Then
				Me.OnPROP_TAX_STATUS_1Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_1 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_1")
				Me.OnPROP_TAX_STATUS_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_2", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=82)>  _
	Public Property PROP_TAX_STATUS_2() As String
		Get
			Return Me._PROP_TAX_STATUS_2
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_2, value) = false) Then
				Me.OnPROP_TAX_STATUS_2Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_2 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_2")
				Me.OnPROP_TAX_STATUS_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_3", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=83)>  _
	Public Property PROP_TAX_STATUS_3() As String
		Get
			Return Me._PROP_TAX_STATUS_3
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_3, value) = false) Then
				Me.OnPROP_TAX_STATUS_3Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_3 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_3")
				Me.OnPROP_TAX_STATUS_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NBRROOMS", DbType:="VarChar(16)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=84)>  _
	Public Property NBRROOMS() As String
		Get
			Return Me._NBRROOMS
		End Get
		Set
			If (String.Equals(Me._NBRROOMS, value) = false) Then
				Me.OnNBRROOMSChanging(value)
				Me.SendPropertyChanging
				Me._NBRROOMS = value
				Me.SendPropertyChanged("NBRROOMS")
				Me.OnNBRROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_HS_NBR", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=85)>  _
	Public Property ST_HS_NBR() As String
		Get
			Return Me._ST_HS_NBR
		End Get
		Set
			If (String.Equals(Me._ST_HS_NBR, value) = false) Then
				Me.OnST_HS_NBRChanging(value)
				Me.SendPropertyChanging
				Me._ST_HS_NBR = value
				Me.SendPropertyChanged("ST_HS_NBR")
				Me.OnST_HS_NBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_FRACT", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=86)>  _
	Public Property ST_FRACT() As String
		Get
			Return Me._ST_FRACT
		End Get
		Set
			If (String.Equals(Me._ST_FRACT, value) = false) Then
				Me.OnST_FRACTChanging(value)
				Me.SendPropertyChanging
				Me._ST_FRACT = value
				Me.SendPropertyChanged("ST_FRACT")
				Me.OnST_FRACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_DIR", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=87)>  _
	Public Property ST_DIR() As String
		Get
			Return Me._ST_DIR
		End Get
		Set
			If (String.Equals(Me._ST_DIR, value) = false) Then
				Me.OnST_DIRChanging(value)
				Me.SendPropertyChanging
				Me._ST_DIR = value
				Me.SendPropertyChanged("ST_DIR")
				Me.OnST_DIRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_STRT", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=88)>  _
	Public Property ST_STRT() As String
		Get
			Return Me._ST_STRT
		End Get
		Set
			If (String.Equals(Me._ST_STRT, value) = false) Then
				Me.OnST_STRTChanging(value)
				Me.SendPropertyChanging
				Me._ST_STRT = value
				Me.SendPropertyChanged("ST_STRT")
				Me.OnST_STRTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_SUF", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=89)>  _
	Public Property ST_SUF() As String
		Get
			Return Me._ST_SUF
		End Get
		Set
			If (String.Equals(Me._ST_SUF, value) = false) Then
				Me.OnST_SUFChanging(value)
				Me.SendPropertyChanging
				Me._ST_SUF = value
				Me.SendPropertyChanged("ST_SUF")
				Me.OnST_SUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_POSTD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=90)>  _
	Public Property ST_POSTD() As String
		Get
			Return Me._ST_POSTD
		End Get
		Set
			If (String.Equals(Me._ST_POSTD, value) = false) Then
				Me.OnST_POSTDChanging(value)
				Me.SendPropertyChanging
				Me._ST_POSTD = value
				Me.SendPropertyChanged("ST_POSTD")
				Me.OnST_POSTDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_UNTPR", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=91)>  _
	Public Property ST_UNTPR() As String
		Get
			Return Me._ST_UNTPR
		End Get
		Set
			If (String.Equals(Me._ST_UNTPR, value) = false) Then
				Me.OnST_UNTPRChanging(value)
				Me.SendPropertyChanging
				Me._ST_UNTPR = value
				Me.SendPropertyChanged("ST_UNTPR")
				Me.OnST_UNTPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_UNTVL", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=92)>  _
	Public Property ST_UNTVL() As String
		Get
			Return Me._ST_UNTVL
		End Get
		Set
			If (String.Equals(Me._ST_UNTVL, value) = false) Then
				Me.OnST_UNTVLChanging(value)
				Me.SendPropertyChanging
				Me._ST_UNTVL = value
				Me.SendPropertyChanged("ST_UNTVL")
				Me.OnST_UNTVLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_CITYSTATE", DbType:="VarChar(55)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=93)>  _
	Public Property ST_CITYSTATE() As String
		Get
			Return Me._ST_CITYSTATE
		End Get
		Set
			If (String.Equals(Me._ST_CITYSTATE, value) = false) Then
				Me.OnST_CITYSTATEChanging(value)
				Me.SendPropertyChanging
				Me._ST_CITYSTATE = value
				Me.SendPropertyChanged("ST_CITYSTATE")
				Me.OnST_CITYSTATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_HS_NBR", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=94)>  _
	Public Property ML_HS_NBR() As String
		Get
			Return Me._ML_HS_NBR
		End Get
		Set
			If (String.Equals(Me._ML_HS_NBR, value) = false) Then
				Me.OnML_HS_NBRChanging(value)
				Me.SendPropertyChanging
				Me._ML_HS_NBR = value
				Me.SendPropertyChanged("ML_HS_NBR")
				Me.OnML_HS_NBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_FRACT", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=95)>  _
	Public Property ML_FRACT() As String
		Get
			Return Me._ML_FRACT
		End Get
		Set
			If (String.Equals(Me._ML_FRACT, value) = false) Then
				Me.OnML_FRACTChanging(value)
				Me.SendPropertyChanging
				Me._ML_FRACT = value
				Me.SendPropertyChanged("ML_FRACT")
				Me.OnML_FRACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_DIR", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=96)>  _
	Public Property ML_DIR() As String
		Get
			Return Me._ML_DIR
		End Get
		Set
			If (String.Equals(Me._ML_DIR, value) = false) Then
				Me.OnML_DIRChanging(value)
				Me.SendPropertyChanging
				Me._ML_DIR = value
				Me.SendPropertyChanged("ML_DIR")
				Me.OnML_DIRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_STRT", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=97)>  _
	Public Property ML_STRT() As String
		Get
			Return Me._ML_STRT
		End Get
		Set
			If (String.Equals(Me._ML_STRT, value) = false) Then
				Me.OnML_STRTChanging(value)
				Me.SendPropertyChanging
				Me._ML_STRT = value
				Me.SendPropertyChanged("ML_STRT")
				Me.OnML_STRTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_SUF", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=98)>  _
	Public Property ML_SUF() As String
		Get
			Return Me._ML_SUF
		End Get
		Set
			If (String.Equals(Me._ML_SUF, value) = false) Then
				Me.OnML_SUFChanging(value)
				Me.SendPropertyChanging
				Me._ML_SUF = value
				Me.SendPropertyChanged("ML_SUF")
				Me.OnML_SUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_POSTD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=99)>  _
	Public Property ML_POSTD() As String
		Get
			Return Me._ML_POSTD
		End Get
		Set
			If (String.Equals(Me._ML_POSTD, value) = false) Then
				Me.OnML_POSTDChanging(value)
				Me.SendPropertyChanging
				Me._ML_POSTD = value
				Me.SendPropertyChanged("ML_POSTD")
				Me.OnML_POSTDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_UNTPR", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=100)>  _
	Public Property ML_UNTPR() As String
		Get
			Return Me._ML_UNTPR
		End Get
		Set
			If (String.Equals(Me._ML_UNTPR, value) = false) Then
				Me.OnML_UNTPRChanging(value)
				Me.SendPropertyChanging
				Me._ML_UNTPR = value
				Me.SendPropertyChanged("ML_UNTPR")
				Me.OnML_UNTPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_UNTVL", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=101)>  _
	Public Property ML_UNTVL() As String
		Get
			Return Me._ML_UNTVL
		End Get
		Set
			If (String.Equals(Me._ML_UNTVL, value) = false) Then
				Me.OnML_UNTVLChanging(value)
				Me.SendPropertyChanging
				Me._ML_UNTVL = value
				Me.SendPropertyChanged("ML_UNTVL")
				Me.OnML_UNTVLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_CITY", DbType:="VarChar(55)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=102)>  _
	Public Property ML_CITY() As String
		Get
			Return Me._ML_CITY
		End Get
		Set
			If (String.Equals(Me._ML_CITY, value) = false) Then
				Me.OnML_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ML_CITY = value
				Me.SendPropertyChanged("ML_CITY")
				Me.OnML_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=103)>  _
	Public Property ML_STATE() As String
		Get
			Return Me._ML_STATE
		End Get
		Set
			If (String.Equals(Me._ML_STATE, value) = false) Then
				Me.OnML_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ML_STATE = value
				Me.SendPropertyChanged("ML_STATE")
				Me.OnML_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ZIP", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=104)>  _
	Public Property ML_ZIP() As String
		Get
			Return Me._ML_ZIP
		End Get
		Set
			If (String.Equals(Me._ML_ZIP, value) = false) Then
				Me.OnML_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._ML_ZIP = value
				Me.SendPropertyChanged("ML_ZIP")
				Me.OnML_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ZIPPLUS4", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=105)>  _
	Public Property ML_ZIPPLUS4() As String
		Get
			Return Me._ML_ZIPPLUS4
		End Get
		Set
			If (String.Equals(Me._ML_ZIPPLUS4, value) = false) Then
				Me.OnML_ZIPPLUS4Changing(value)
				Me.SendPropertyChanging
				Me._ML_ZIPPLUS4 = value
				Me.SendPropertyChanged("ML_ZIPPLUS4")
				Me.OnML_ZIPPLUS4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_HOUSE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=106)>  _
	Public Property TRUSTEE_HOUSE() As String
		Get
			Return Me._TRUSTEE_HOUSE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_HOUSE, value) = false) Then
				Me.OnTRUSTEE_HOUSEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_HOUSE = value
				Me.SendPropertyChanged("TRUSTEE_HOUSE")
				Me.OnTRUSTEE_HOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_STNAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=107)>  _
	Public Property TRUSTEE_STNAME() As String
		Get
			Return Me._TRUSTEE_STNAME
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_STNAME, value) = false) Then
				Me.OnTRUSTEE_STNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_STNAME = value
				Me.SendPropertyChanged("TRUSTEE_STNAME")
				Me.OnTRUSTEE_STNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_UNITNBR", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=108)>  _
	Public Property TRUSTEE_UNITNBR() As String
		Get
			Return Me._TRUSTEE_UNITNBR
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_UNITNBR, value) = false) Then
				Me.OnTRUSTEE_UNITNBRChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_UNITNBR = value
				Me.SendPropertyChanged("TRUSTEE_UNITNBR")
				Me.OnTRUSTEE_UNITNBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_HOUSE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=109)>  _
	Public Property BENE_HOUSE() As String
		Get
			Return Me._BENE_HOUSE
		End Get
		Set
			If (String.Equals(Me._BENE_HOUSE, value) = false) Then
				Me.OnBENE_HOUSEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_HOUSE = value
				Me.SendPropertyChanged("BENE_HOUSE")
				Me.OnBENE_HOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_STNAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=110)>  _
	Public Property BENE_STNAME() As String
		Get
			Return Me._BENE_STNAME
		End Get
		Set
			If (String.Equals(Me._BENE_STNAME, value) = false) Then
				Me.OnBENE_STNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_STNAME = value
				Me.SendPropertyChanged("BENE_STNAME")
				Me.OnBENE_STNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_UNITNBR", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=111)>  _
	Public Property BENE_UNITNBR() As String
		Get
			Return Me._BENE_UNITNBR
		End Get
		Set
			If (String.Equals(Me._BENE_UNITNBR, value) = false) Then
				Me.OnBENE_UNITNBRChanging(value)
				Me.SendPropertyChanging
				Me._BENE_UNITNBR = value
				Me.SendPropertyChanged("BENE_UNITNBR")
				Me.OnBENE_UNITNBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_OWNR_SC", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=112)>  _
	Public Property SA_OWNR_SC() As String
		Get
			Return Me._SA_OWNR_SC
		End Get
		Set
			If (String.Equals(Me._SA_OWNR_SC, value) = false) Then
				Me.OnSA_OWNR_SCChanging(value)
				Me.SendPropertyChanging
				Me._SA_OWNR_SC = value
				Me.SendPropertyChanged("SA_OWNR_SC")
				Me.OnSA_OWNR_SCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_POL_COD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=113)>  _
	Public Property SA_POL_COD() As String
		Get
			Return Me._SA_POL_COD
		End Get
		Set
			If (String.Equals(Me._SA_POL_COD, value) = false) Then
				Me.OnSA_POL_CODChanging(value)
				Me.SendPropertyChanging
				Me._SA_POL_COD = value
				Me.SendPropertyChanged("SA_POL_COD")
				Me.OnSA_POL_CODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_POL_SQF", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=114)>  _
	Public Property SA_POL_SQF() As String
		Get
			Return Me._SA_POL_SQF
		End Get
		Set
			If (String.Equals(Me._SA_POL_SQF, value) = false) Then
				Me.OnSA_POL_SQFChanging(value)
				Me.SendPropertyChanging
				Me._SA_POL_SQF = value
				Me.SendPropertyChanged("SA_POL_SQF")
				Me.OnSA_POL_SQFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_VW_CODE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=115)>  _
	Public Property SA_VW_CODE() As String
		Get
			Return Me._SA_VW_CODE
		End Get
		Set
			If (String.Equals(Me._SA_VW_CODE, value) = false) Then
				Me.OnSA_VW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SA_VW_CODE = value
				Me.SendPropertyChanged("SA_VW_CODE")
				Me.OnSA_VW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOD_REC_DT", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=116)>  _
	Public Property NOD_REC_DT() As System.Nullable(Of Date)
		Get
			Return Me._NOD_REC_DT
		End Get
		Set
			If (Me._NOD_REC_DT.Equals(value) = false) Then
				Me.OnNOD_REC_DTChanging(value)
				Me.SendPropertyChanging
				Me._NOD_REC_DT = value
				Me.SendPropertyChanged("NOD_REC_DT")
				Me.OnNOD_REC_DTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS_REC_DT", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=117)>  _
	Public Property NTS_REC_DT() As System.Nullable(Of Date)
		Get
			Return Me._NTS_REC_DT
		End Get
		Set
			If (Me._NTS_REC_DT.Equals(value) = false) Then
				Me.OnNTS_REC_DTChanging(value)
				Me.SendPropertyChanging
				Me._NTS_REC_DT = value
				Me.SendPropertyChanged("NTS_REC_DT")
				Me.OnNTS_REC_DTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=118)>  _
	Public Property ST_STATE() As String
		Get
			Return Me._ST_STATE
		End Get
		Set
			If (String.Equals(Me._ST_STATE, value) = false) Then
				Me.OnST_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ST_STATE = value
				Me.SendPropertyChanged("ST_STATE")
				Me.OnST_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCounty", DbType:="Int"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=119)>  _
	Public Property IdCounty() As System.Nullable(Of Integer)
		Get
			Return Me._IdCounty
		End Get
		Set
			If (Me._IdCounty.Equals(value) = false) Then
				Me.OnIdCountyChanging(value)
				Me.SendPropertyChanging
				Me._IdCounty = value
				Me.SendPropertyChanged("IdCounty")
				Me.OnIdCountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_ZONING", DbType:="VarChar(13)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=120)>  _
	Public Property SA_ZONING() As String
		Get
			Return Me._SA_ZONING
		End Get
		Set
			If (String.Equals(Me._SA_ZONING, value) = false) Then
				Me.OnSA_ZONINGChanging(value)
				Me.SendPropertyChanging
				Me._SA_ZONING = value
				Me.SendPropertyChanged("SA_ZONING")
				Me.OnSA_ZONINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_VAL_TRANSFER", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=121)>  _
	Public Property SA_VAL_TRANSFER() As String
		Get
			Return Me._SA_VAL_TRANSFER
		End Get
		Set
			If (String.Equals(Me._SA_VAL_TRANSFER, value) = false) Then
				Me.OnSA_VAL_TRANSFERChanging(value)
				Me.SendPropertyChanging
				Me._SA_VAL_TRANSFER = value
				Me.SendPropertyChanged("SA_VAL_TRANSFER")
				Me.OnSA_VAL_TRANSFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Status_NT", Storage:="_Status", ThisKey:="IdStatus", OtherKey:="IdStatus", IsForeignKey:=true)>  _
	Public Property Status() As Status
		Get
			Return Me._Status.Entity
		End Get
		Set
			Dim previousValue As Status = Me._Status.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Status.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Status.Entity = Nothing
					previousValue.NTs.Remove(Me)
				End If
				Me._Status.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NTs.Add(Me)
					Me._IdStatus = value.IdStatus
				Else
					Me._IdStatus = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Status")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="StatusDBF_NT", Storage:="_StatusDBF", ThisKey:="IdStatusDBF", OtherKey:="IdStatusDBF", IsForeignKey:=true)>  _
	Public Property StatusDBF() As StatusDBF
		Get
			Return Me._StatusDBF.Entity
		End Get
		Set
			Dim previousValue As StatusDBF = Me._StatusDBF.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StatusDBF.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StatusDBF.Entity = Nothing
					previousValue.NTs.Remove(Me)
				End If
				Me._StatusDBF.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NTs.Add(Me)
					Me._IdStatusDBF = value.IdStatusDBF
				Else
					Me._IdStatusDBF = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("StatusDBF")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub Initialize()
		Me._Status = CType(Nothing, EntityRef(Of Status))
		Me._StatusDBF = CType(Nothing, EntityRef(Of StatusDBF))
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NOD"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class NOD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdNod As Integer
	
	Private _LST As String
	
	Private _ADDRESS As String
	
	Private _CITY As String
	
	Private _ZIP As String
	
	Private _TG As String
	
	Private _HOEX As String
	
	Private _TRUSTOR As String
	
	Private _OWNER As String
	
	Private _BENEFRY As String
	
	Private _B_PHONE As String
	
	Private _TAX_VALUE As String
	
	Private _TX_YR As String
	
	Private _PRCHS_DATE As System.Nullable(Of Date)
	
	Private _AMOUNT As String
	
	Private _TD1_A As String
	
	Private _TD1 As String
	
	Private _TD1_D As System.Nullable(Of Date)
	
	Private _TD2_A As String
	
	Private _TD2 As String
	
	Private _TD2_D As System.Nullable(Of Date)
	
	Private _TD3_A As String
	
	Private _TD3 As String
	
	Private _TD3_D As System.Nullable(Of Date)
	
	Private _TD4_A As String
	
	Private _TD4 As String
	
	Private _TD4_D As System.Nullable(Of Date)
	
	Private _TD5_A As String
	
	Private _TD5 As String
	
	Private _TD5_D As System.Nullable(Of Date)
	
	Private _TD6_A As String
	
	Private _TD6 As String
	
	Private _TD6_D As System.Nullable(Of Date)
	
	Private _USE As String
	
	Private _YRBLT As String
	
	Private _SQFT As String
	
	Private _STORY As String
	
	Private _ROOMS As String
	
	Private _LOT As String
	
	Private _LEGAL As String
	
	Private _ASSPAR As String
	
	Private _NOD As String
	
	Private _LOAN As String
	
	Private _TDID As String
	
	Private _REMARKS As String
	
	Private _COUNTY As String
	
	Private _L_DATE As System.Nullable(Of Date)
	
	Private _ASOF As System.Nullable(Of Date)
	
	Private _DELNIQ As System.Nullable(Of Date)
	
	Private _TRUSTEE As String
	
	Private _SALE_TIME As String
	
	Private _NTS As String
	
	Private _T_PHONE As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _SITE As String
	
	Private _Created As Date
	
	Private _Modified As Date
	
	Private _IdStatus As Integer
	
	Private _IdStatusDBF As System.Nullable(Of Integer)
	
	Private _DateDBF As System.Nullable(Of Date)
	
	Private _Locked As Integer
	
	Private _SA_PROPERTY_ID As String
	
	Private _SR_UNIQUE_ID As String
	
	Private _OWNER1 As String
	
	Private _OWNER2 As String
	
	Private _TRUSTOR_FIRST_NAME As String
	
	Private _TRUSTOR_LAST_NAME As String
	
	Private _BATHROOMS As String
	
	Private _BEDROOMS As String
	
	Private _ADDRESS_ID_STATE As String
	
	Private _TR_PHONE As String
	
	Private _TRUSTEE_ADDRESS As String
	
	Private _TRUSTEE_CITY As String
	
	Private _TRUSTEE_ZIP As String
	
	Private _TRUSTEE_ADDRESS_ID_STATE As String
	
	Private _BENE_ADDRESS As String
	
	Private _BENE_CITY As String
	
	Private _BENE_ZIP As String
	
	Private _BENE_ADDRESS_ID_STATE As String
	
	Private _UNITS As String
	
	Private _ESTIMATED_PROP_VALUE As String
	
	Private _PROP_TAX_STATUS_1 As String
	
	Private _PROP_TAX_STATUS_2 As String
	
	Private _PROP_TAX_STATUS_3 As String
	
	Private _NBRROOMS As String
	
	Private _ST_HS_NBR As String
	
	Private _ST_FRACT As String
	
	Private _ST_DIR As String
	
	Private _ST_STRT As String
	
	Private _ST_SUF As String
	
	Private _ST_POSTD As String
	
	Private _ST_UNTPR As String
	
	Private _ST_UNTVL As String
	
	Private _ST_CITYSTATE As String
	
	Private _ML_HS_NBR As String
	
	Private _ML_FRACT As String
	
	Private _ML_DIR As String
	
	Private _ML_STRT As String
	
	Private _ML_SUF As String
	
	Private _ML_POSTD As String
	
	Private _ML_UNTPR As String
	
	Private _ML_UNTVL As String
	
	Private _ML_CITY As String
	
	Private _ML_STATE As String
	
	Private _ML_ZIP As String
	
	Private _ML_ZIPPLUS4 As String
	
	Private _TRUSTEE_HOUSE As String
	
	Private _TRUSTEE_STNAME As String
	
	Private _TRUSTEE_UNITNBR As String
	
	Private _BENE_HOUSE As String
	
	Private _BENE_STNAME As String
	
	Private _BENE_UNITNBR As String
	
	Private _SA_OWNR_SC As String
	
	Private _SA_POL_COD As String
	
	Private _SA_POL_SQF As String
	
	Private _SA_VW_CODE As String
	
	Private _NOD_REC_DT As System.Nullable(Of Date)
	
	Private _NTS_REC_DT As System.Nullable(Of Date)
	
	Private _ST_STATE As String
	
	Private _IdCounty As System.Nullable(Of Integer)
	
	Private _FD_TRUSTEE_SALE_NBR As String
	
	Private _SA_ZONING As String
	
	Private _SA_VAL_TRANSFER As String
	
	Private _Status As EntityRef(Of Status)
	
	Private _StatusDBF As EntityRef(Of StatusDBF)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdNodChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdNodChanged()
    End Sub
    Partial Private Sub OnLSTChanging(value As String)
    End Sub
    Partial Private Sub OnLSTChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnZIPChanging(value As String)
    End Sub
    Partial Private Sub OnZIPChanged()
    End Sub
    Partial Private Sub OnTGChanging(value As String)
    End Sub
    Partial Private Sub OnTGChanged()
    End Sub
    Partial Private Sub OnHOEXChanging(value As String)
    End Sub
    Partial Private Sub OnHOEXChanged()
    End Sub
    Partial Private Sub OnTRUSTORChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTORChanged()
    End Sub
    Partial Private Sub OnOWNERChanging(value As String)
    End Sub
    Partial Private Sub OnOWNERChanged()
    End Sub
    Partial Private Sub OnBENEFRYChanging(value As String)
    End Sub
    Partial Private Sub OnBENEFRYChanged()
    End Sub
    Partial Private Sub OnB_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnB_PHONEChanged()
    End Sub
    Partial Private Sub OnTAX_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnTAX_VALUEChanged()
    End Sub
    Partial Private Sub OnTX_YRChanging(value As String)
    End Sub
    Partial Private Sub OnTX_YRChanged()
    End Sub
    Partial Private Sub OnPRCHS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPRCHS_DATEChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnTD1_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD1_AChanged()
    End Sub
    Partial Private Sub OnTD1Changing(value As String)
    End Sub
    Partial Private Sub OnTD1Changed()
    End Sub
    Partial Private Sub OnTD1_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD1_DChanged()
    End Sub
    Partial Private Sub OnTD2_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD2_AChanged()
    End Sub
    Partial Private Sub OnTD2Changing(value As String)
    End Sub
    Partial Private Sub OnTD2Changed()
    End Sub
    Partial Private Sub OnTD2_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD2_DChanged()
    End Sub
    Partial Private Sub OnTD3_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD3_AChanged()
    End Sub
    Partial Private Sub OnTD3Changing(value As String)
    End Sub
    Partial Private Sub OnTD3Changed()
    End Sub
    Partial Private Sub OnTD3_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD3_DChanged()
    End Sub
    Partial Private Sub OnTD4_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD4_AChanged()
    End Sub
    Partial Private Sub OnTD4Changing(value As String)
    End Sub
    Partial Private Sub OnTD4Changed()
    End Sub
    Partial Private Sub OnTD4_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD4_DChanged()
    End Sub
    Partial Private Sub OnTD5_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD5_AChanged()
    End Sub
    Partial Private Sub OnTD5Changing(value As String)
    End Sub
    Partial Private Sub OnTD5Changed()
    End Sub
    Partial Private Sub OnTD5_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD5_DChanged()
    End Sub
    Partial Private Sub OnTD6_AChanging(value As String)
    End Sub
    Partial Private Sub OnTD6_AChanged()
    End Sub
    Partial Private Sub OnTD6Changing(value As String)
    End Sub
    Partial Private Sub OnTD6Changed()
    End Sub
    Partial Private Sub OnTD6_DChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTD6_DChanged()
    End Sub
    Partial Private Sub OnUSEChanging(value As String)
    End Sub
    Partial Private Sub OnUSEChanged()
    End Sub
    Partial Private Sub OnYRBLTChanging(value As String)
    End Sub
    Partial Private Sub OnYRBLTChanged()
    End Sub
    Partial Private Sub OnSQFTChanging(value As String)
    End Sub
    Partial Private Sub OnSQFTChanged()
    End Sub
    Partial Private Sub OnSTORYChanging(value As String)
    End Sub
    Partial Private Sub OnSTORYChanged()
    End Sub
    Partial Private Sub OnROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnROOMSChanged()
    End Sub
    Partial Private Sub OnLOTChanging(value As String)
    End Sub
    Partial Private Sub OnLOTChanged()
    End Sub
    Partial Private Sub OnLEGALChanging(value As String)
    End Sub
    Partial Private Sub OnLEGALChanged()
    End Sub
    Partial Private Sub OnASSPARChanging(value As String)
    End Sub
    Partial Private Sub OnASSPARChanged()
    End Sub
    Partial Private Sub OnNODChanging(value As String)
    End Sub
    Partial Private Sub OnNODChanged()
    End Sub
    Partial Private Sub OnLOANChanging(value As String)
    End Sub
    Partial Private Sub OnLOANChanged()
    End Sub
    Partial Private Sub OnTDIDChanging(value As String)
    End Sub
    Partial Private Sub OnTDIDChanged()
    End Sub
    Partial Private Sub OnREMARKSChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKSChanged()
    End Sub
    Partial Private Sub OnCOUNTYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTYChanged()
    End Sub
    Partial Private Sub OnL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnL_DATEChanged()
    End Sub
    Partial Private Sub OnASOFChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnASOFChanged()
    End Sub
    Partial Private Sub OnDELNIQChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDELNIQChanged()
    End Sub
    Partial Private Sub OnTRUSTEEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEEChanged()
    End Sub
    Partial Private Sub OnSALE_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALE_TIMEChanged()
    End Sub
    Partial Private Sub OnNTSChanging(value As String)
    End Sub
    Partial Private Sub OnNTSChanged()
    End Sub
    Partial Private Sub OnT_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnT_PHONEChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSITEChanging(value As String)
    End Sub
    Partial Private Sub OnSITEChanged()
    End Sub
    Partial Private Sub OnCreatedChanging(value As Date)
    End Sub
    Partial Private Sub OnCreatedChanged()
    End Sub
    Partial Private Sub OnModifiedChanging(value As Date)
    End Sub
    Partial Private Sub OnModifiedChanged()
    End Sub
    Partial Private Sub OnIdStatusChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdStatusChanged()
    End Sub
    Partial Private Sub OnIdStatusDBFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdStatusDBFChanged()
    End Sub
    Partial Private Sub OnDateDBFChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateDBFChanged()
    End Sub
    Partial Private Sub OnLockedChanging(value As Integer)
    End Sub
    Partial Private Sub OnLockedChanged()
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSA_PROPERTY_IDChanged()
    End Sub
    Partial Private Sub OnSR_UNIQUE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSR_UNIQUE_IDChanged()
    End Sub
    Partial Private Sub OnOWNER1Changing(value As String)
    End Sub
    Partial Private Sub OnOWNER1Changed()
    End Sub
    Partial Private Sub OnOWNER2Changing(value As String)
    End Sub
    Partial Private Sub OnOWNER2Changed()
    End Sub
    Partial Private Sub OnTRUSTOR_FIRST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTOR_FIRST_NAMEChanged()
    End Sub
    Partial Private Sub OnTRUSTOR_LAST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTOR_LAST_NAMEChanged()
    End Sub
    Partial Private Sub OnBATHROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnBATHROOMSChanged()
    End Sub
    Partial Private Sub OnBEDROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnBEDROOMSChanged()
    End Sub
    Partial Private Sub OnADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnTR_PHONEChanging(value As String)
    End Sub
    Partial Private Sub OnTR_PHONEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESSChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_CITYChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ZIPChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_ADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnBENE_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ADDRESSChanged()
    End Sub
    Partial Private Sub OnBENE_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_CITYChanged()
    End Sub
    Partial Private Sub OnBENE_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ZIPChanged()
    End Sub
    Partial Private Sub OnBENE_ADDRESS_ID_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_ADDRESS_ID_STATEChanged()
    End Sub
    Partial Private Sub OnUNITSChanging(value As String)
    End Sub
    Partial Private Sub OnUNITSChanged()
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnESTIMATED_PROP_VALUEChanged()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_1Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_1Changed()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_2Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_2Changed()
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_3Changing(value As String)
    End Sub
    Partial Private Sub OnPROP_TAX_STATUS_3Changed()
    End Sub
    Partial Private Sub OnNBRROOMSChanging(value As String)
    End Sub
    Partial Private Sub OnNBRROOMSChanged()
    End Sub
    Partial Private Sub OnST_HS_NBRChanging(value As String)
    End Sub
    Partial Private Sub OnST_HS_NBRChanged()
    End Sub
    Partial Private Sub OnST_FRACTChanging(value As String)
    End Sub
    Partial Private Sub OnST_FRACTChanged()
    End Sub
    Partial Private Sub OnST_DIRChanging(value As String)
    End Sub
    Partial Private Sub OnST_DIRChanged()
    End Sub
    Partial Private Sub OnST_STRTChanging(value As String)
    End Sub
    Partial Private Sub OnST_STRTChanged()
    End Sub
    Partial Private Sub OnST_SUFChanging(value As String)
    End Sub
    Partial Private Sub OnST_SUFChanged()
    End Sub
    Partial Private Sub OnST_POSTDChanging(value As String)
    End Sub
    Partial Private Sub OnST_POSTDChanged()
    End Sub
    Partial Private Sub OnST_UNTPRChanging(value As String)
    End Sub
    Partial Private Sub OnST_UNTPRChanged()
    End Sub
    Partial Private Sub OnST_UNTVLChanging(value As String)
    End Sub
    Partial Private Sub OnST_UNTVLChanged()
    End Sub
    Partial Private Sub OnST_CITYSTATEChanging(value As String)
    End Sub
    Partial Private Sub OnST_CITYSTATEChanged()
    End Sub
    Partial Private Sub OnML_HS_NBRChanging(value As String)
    End Sub
    Partial Private Sub OnML_HS_NBRChanged()
    End Sub
    Partial Private Sub OnML_FRACTChanging(value As String)
    End Sub
    Partial Private Sub OnML_FRACTChanged()
    End Sub
    Partial Private Sub OnML_DIRChanging(value As String)
    End Sub
    Partial Private Sub OnML_DIRChanged()
    End Sub
    Partial Private Sub OnML_STRTChanging(value As String)
    End Sub
    Partial Private Sub OnML_STRTChanged()
    End Sub
    Partial Private Sub OnML_SUFChanging(value As String)
    End Sub
    Partial Private Sub OnML_SUFChanged()
    End Sub
    Partial Private Sub OnML_POSTDChanging(value As String)
    End Sub
    Partial Private Sub OnML_POSTDChanged()
    End Sub
    Partial Private Sub OnML_UNTPRChanging(value As String)
    End Sub
    Partial Private Sub OnML_UNTPRChanged()
    End Sub
    Partial Private Sub OnML_UNTVLChanging(value As String)
    End Sub
    Partial Private Sub OnML_UNTVLChanged()
    End Sub
    Partial Private Sub OnML_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnML_CITYChanged()
    End Sub
    Partial Private Sub OnML_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnML_STATEChanged()
    End Sub
    Partial Private Sub OnML_ZIPChanging(value As String)
    End Sub
    Partial Private Sub OnML_ZIPChanged()
    End Sub
    Partial Private Sub OnML_ZIPPLUS4Changing(value As String)
    End Sub
    Partial Private Sub OnML_ZIPPLUS4Changed()
    End Sub
    Partial Private Sub OnTRUSTEE_HOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_HOUSEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_STNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_STNAMEChanged()
    End Sub
    Partial Private Sub OnTRUSTEE_UNITNBRChanging(value As String)
    End Sub
    Partial Private Sub OnTRUSTEE_UNITNBRChanged()
    End Sub
    Partial Private Sub OnBENE_HOUSEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_HOUSEChanged()
    End Sub
    Partial Private Sub OnBENE_STNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_STNAMEChanged()
    End Sub
    Partial Private Sub OnBENE_UNITNBRChanging(value As String)
    End Sub
    Partial Private Sub OnBENE_UNITNBRChanged()
    End Sub
    Partial Private Sub OnSA_OWNR_SCChanging(value As String)
    End Sub
    Partial Private Sub OnSA_OWNR_SCChanged()
    End Sub
    Partial Private Sub OnSA_POL_CODChanging(value As String)
    End Sub
    Partial Private Sub OnSA_POL_CODChanged()
    End Sub
    Partial Private Sub OnSA_POL_SQFChanging(value As String)
    End Sub
    Partial Private Sub OnSA_POL_SQFChanged()
    End Sub
    Partial Private Sub OnSA_VW_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSA_VW_CODEChanged()
    End Sub
    Partial Private Sub OnNOD_REC_DTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNOD_REC_DTChanged()
    End Sub
    Partial Private Sub OnNTS_REC_DTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNTS_REC_DTChanged()
    End Sub
    Partial Private Sub OnST_STATEChanging(value As String)
    End Sub
    Partial Private Sub OnST_STATEChanged()
    End Sub
    Partial Private Sub OnIdCountyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCountyChanged()
    End Sub
    Partial Private Sub OnFD_TRUSTEE_SALE_NBRChanging(value As String)
    End Sub
    Partial Private Sub OnFD_TRUSTEE_SALE_NBRChanged()
    End Sub
    Partial Private Sub OnSA_ZONINGChanging(value As String)
    End Sub
    Partial Private Sub OnSA_ZONINGChanged()
    End Sub
    Partial Private Sub OnSA_VAL_TRANSFERChanging(value As String)
    End Sub
    Partial Private Sub OnSA_VAL_TRANSFERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me.Initialize
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdNod", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property IdNod() As Integer
		Get
			Return Me._IdNod
		End Get
		Set
			If ((Me._IdNod = value)  _
						= false) Then
				Me.OnIdNodChanging(value)
				Me.SendPropertyChanging
				Me._IdNod = value
				Me.SendPropertyChanged("IdNod")
				Me.OnIdNodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LST", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property LST() As String
		Get
			Return Me._LST
		End Get
		Set
			If (String.Equals(Me._LST, value) = false) Then
				Me.OnLSTChanging(value)
				Me.SendPropertyChanging
				Me._LST = value
				Me.SendPropertyChanged("LST")
				Me.OnLSTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="VarChar(78)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="VarChar(22)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property CITY() As String
		Get
			Return Me._CITY
		End Get
		Set
			If (String.Equals(Me._CITY, value) = false) Then
				Me.OnCITYChanging(value)
				Me.SendPropertyChanging
				Me._CITY = value
				Me.SendPropertyChanged("CITY")
				Me.OnCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property ZIP() As String
		Get
			Return Me._ZIP
		End Get
		Set
			If (String.Equals(Me._ZIP, value) = false) Then
				Me.OnZIPChanging(value)
				Me.SendPropertyChanging
				Me._ZIP = value
				Me.SendPropertyChanged("ZIP")
				Me.OnZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TG", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
	Public Property TG() As String
		Get
			Return Me._TG
		End Get
		Set
			If (String.Equals(Me._TG, value) = false) Then
				Me.OnTGChanging(value)
				Me.SendPropertyChanging
				Me._TG = value
				Me.SendPropertyChanged("TG")
				Me.OnTGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOEX", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
	Public Property HOEX() As String
		Get
			Return Me._HOEX
		End Get
		Set
			If (String.Equals(Me._HOEX, value) = false) Then
				Me.OnHOEXChanging(value)
				Me.SendPropertyChanging
				Me._HOEX = value
				Me.SendPropertyChanged("HOEX")
				Me.OnHOEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
	Public Property TRUSTOR() As String
		Get
			Return Me._TRUSTOR
		End Get
		Set
			If (String.Equals(Me._TRUSTOR, value) = false) Then
				Me.OnTRUSTORChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR = value
				Me.SendPropertyChanged("TRUSTOR")
				Me.OnTRUSTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
	Public Property OWNER() As String
		Get
			Return Me._OWNER
		End Get
		Set
			If (String.Equals(Me._OWNER, value) = false) Then
				Me.OnOWNERChanging(value)
				Me.SendPropertyChanging
				Me._OWNER = value
				Me.SendPropertyChanged("OWNER")
				Me.OnOWNERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENEFRY", DbType:="VarChar(38)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
	Public Property BENEFRY() As String
		Get
			Return Me._BENEFRY
		End Get
		Set
			If (String.Equals(Me._BENEFRY, value) = false) Then
				Me.OnBENEFRYChanging(value)
				Me.SendPropertyChanging
				Me._BENEFRY = value
				Me.SendPropertyChanged("BENEFRY")
				Me.OnBENEFRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
	Public Property B_PHONE() As String
		Get
			Return Me._B_PHONE
		End Get
		Set
			If (String.Equals(Me._B_PHONE, value) = false) Then
				Me.OnB_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._B_PHONE = value
				Me.SendPropertyChanged("B_PHONE")
				Me.OnB_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAX_VALUE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
	Public Property TAX_VALUE() As String
		Get
			Return Me._TAX_VALUE
		End Get
		Set
			If (String.Equals(Me._TAX_VALUE, value) = false) Then
				Me.OnTAX_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._TAX_VALUE = value
				Me.SendPropertyChanged("TAX_VALUE")
				Me.OnTAX_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TX_YR", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
	Public Property TX_YR() As String
		Get
			Return Me._TX_YR
		End Get
		Set
			If (String.Equals(Me._TX_YR, value) = false) Then
				Me.OnTX_YRChanging(value)
				Me.SendPropertyChanging
				Me._TX_YR = value
				Me.SendPropertyChanged("TX_YR")
				Me.OnTX_YRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRCHS_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
	Public Property PRCHS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PRCHS_DATE
		End Get
		Set
			If (Me._PRCHS_DATE.Equals(value) = false) Then
				Me.OnPRCHS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PRCHS_DATE = value
				Me.SendPropertyChanged("PRCHS_DATE")
				Me.OnPRCHS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
	Public Property AMOUNT() As String
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (String.Equals(Me._AMOUNT, value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
	Public Property TD1_A() As String
		Get
			Return Me._TD1_A
		End Get
		Set
			If (String.Equals(Me._TD1_A, value) = false) Then
				Me.OnTD1_AChanging(value)
				Me.SendPropertyChanging
				Me._TD1_A = value
				Me.SendPropertyChanged("TD1_A")
				Me.OnTD1_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
	Public Property TD1() As String
		Get
			Return Me._TD1
		End Get
		Set
			If (String.Equals(Me._TD1, value) = false) Then
				Me.OnTD1Changing(value)
				Me.SendPropertyChanging
				Me._TD1 = value
				Me.SendPropertyChanged("TD1")
				Me.OnTD1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
	Public Property TD1_D() As System.Nullable(Of Date)
		Get
			Return Me._TD1_D
		End Get
		Set
			If (Me._TD1_D.Equals(value) = false) Then
				Me.OnTD1_DChanging(value)
				Me.SendPropertyChanging
				Me._TD1_D = value
				Me.SendPropertyChanged("TD1_D")
				Me.OnTD1_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
	Public Property TD2_A() As String
		Get
			Return Me._TD2_A
		End Get
		Set
			If (String.Equals(Me._TD2_A, value) = false) Then
				Me.OnTD2_AChanging(value)
				Me.SendPropertyChanging
				Me._TD2_A = value
				Me.SendPropertyChanged("TD2_A")
				Me.OnTD2_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
	Public Property TD2() As String
		Get
			Return Me._TD2
		End Get
		Set
			If (String.Equals(Me._TD2, value) = false) Then
				Me.OnTD2Changing(value)
				Me.SendPropertyChanging
				Me._TD2 = value
				Me.SendPropertyChanged("TD2")
				Me.OnTD2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
	Public Property TD2_D() As System.Nullable(Of Date)
		Get
			Return Me._TD2_D
		End Get
		Set
			If (Me._TD2_D.Equals(value) = false) Then
				Me.OnTD2_DChanging(value)
				Me.SendPropertyChanging
				Me._TD2_D = value
				Me.SendPropertyChanged("TD2_D")
				Me.OnTD2_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
	Public Property TD3_A() As String
		Get
			Return Me._TD3_A
		End Get
		Set
			If (String.Equals(Me._TD3_A, value) = false) Then
				Me.OnTD3_AChanging(value)
				Me.SendPropertyChanging
				Me._TD3_A = value
				Me.SendPropertyChanged("TD3_A")
				Me.OnTD3_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
	Public Property TD3() As String
		Get
			Return Me._TD3
		End Get
		Set
			If (String.Equals(Me._TD3, value) = false) Then
				Me.OnTD3Changing(value)
				Me.SendPropertyChanging
				Me._TD3 = value
				Me.SendPropertyChanged("TD3")
				Me.OnTD3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
	Public Property TD3_D() As System.Nullable(Of Date)
		Get
			Return Me._TD3_D
		End Get
		Set
			If (Me._TD3_D.Equals(value) = false) Then
				Me.OnTD3_DChanging(value)
				Me.SendPropertyChanging
				Me._TD3_D = value
				Me.SendPropertyChanged("TD3_D")
				Me.OnTD3_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
	Public Property TD4_A() As String
		Get
			Return Me._TD4_A
		End Get
		Set
			If (String.Equals(Me._TD4_A, value) = false) Then
				Me.OnTD4_AChanging(value)
				Me.SendPropertyChanging
				Me._TD4_A = value
				Me.SendPropertyChanged("TD4_A")
				Me.OnTD4_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
	Public Property TD4() As String
		Get
			Return Me._TD4
		End Get
		Set
			If (String.Equals(Me._TD4, value) = false) Then
				Me.OnTD4Changing(value)
				Me.SendPropertyChanging
				Me._TD4 = value
				Me.SendPropertyChanged("TD4")
				Me.OnTD4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD4_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
	Public Property TD4_D() As System.Nullable(Of Date)
		Get
			Return Me._TD4_D
		End Get
		Set
			If (Me._TD4_D.Equals(value) = false) Then
				Me.OnTD4_DChanging(value)
				Me.SendPropertyChanging
				Me._TD4_D = value
				Me.SendPropertyChanged("TD4_D")
				Me.OnTD4_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
	Public Property TD5_A() As String
		Get
			Return Me._TD5_A
		End Get
		Set
			If (String.Equals(Me._TD5_A, value) = false) Then
				Me.OnTD5_AChanging(value)
				Me.SendPropertyChanging
				Me._TD5_A = value
				Me.SendPropertyChanged("TD5_A")
				Me.OnTD5_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
	Public Property TD5() As String
		Get
			Return Me._TD5
		End Get
		Set
			If (String.Equals(Me._TD5, value) = false) Then
				Me.OnTD5Changing(value)
				Me.SendPropertyChanging
				Me._TD5 = value
				Me.SendPropertyChanged("TD5")
				Me.OnTD5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD5_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=30)>  _
	Public Property TD5_D() As System.Nullable(Of Date)
		Get
			Return Me._TD5_D
		End Get
		Set
			If (Me._TD5_D.Equals(value) = false) Then
				Me.OnTD5_DChanging(value)
				Me.SendPropertyChanging
				Me._TD5_D = value
				Me.SendPropertyChanged("TD5_D")
				Me.OnTD5_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=31)>  _
	Public Property TD6_A() As String
		Get
			Return Me._TD6_A
		End Get
		Set
			If (String.Equals(Me._TD6_A, value) = false) Then
				Me.OnTD6_AChanging(value)
				Me.SendPropertyChanging
				Me._TD6_A = value
				Me.SendPropertyChanged("TD6_A")
				Me.OnTD6_AChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=32)>  _
	Public Property TD6() As String
		Get
			Return Me._TD6
		End Get
		Set
			If (String.Equals(Me._TD6, value) = false) Then
				Me.OnTD6Changing(value)
				Me.SendPropertyChanging
				Me._TD6 = value
				Me.SendPropertyChanged("TD6")
				Me.OnTD6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD6_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=33)>  _
	Public Property TD6_D() As System.Nullable(Of Date)
		Get
			Return Me._TD6_D
		End Get
		Set
			If (Me._TD6_D.Equals(value) = false) Then
				Me.OnTD6_DChanging(value)
				Me.SendPropertyChanging
				Me._TD6_D = value
				Me.SendPropertyChanged("TD6_D")
				Me.OnTD6_DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[USE]", Storage:="_USE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=34)>  _
	Public Property USE() As String
		Get
			Return Me._USE
		End Get
		Set
			If (String.Equals(Me._USE, value) = false) Then
				Me.OnUSEChanging(value)
				Me.SendPropertyChanging
				Me._USE = value
				Me.SendPropertyChanged("USE")
				Me.OnUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YRBLT", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=35)>  _
	Public Property YRBLT() As String
		Get
			Return Me._YRBLT
		End Get
		Set
			If (String.Equals(Me._YRBLT, value) = false) Then
				Me.OnYRBLTChanging(value)
				Me.SendPropertyChanging
				Me._YRBLT = value
				Me.SendPropertyChanged("YRBLT")
				Me.OnYRBLTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SQFT", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=36)>  _
	Public Property SQFT() As String
		Get
			Return Me._SQFT
		End Get
		Set
			If (String.Equals(Me._SQFT, value) = false) Then
				Me.OnSQFTChanging(value)
				Me.SendPropertyChanging
				Me._SQFT = value
				Me.SendPropertyChanged("SQFT")
				Me.OnSQFTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORY", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=37)>  _
	Public Property STORY() As String
		Get
			Return Me._STORY
		End Get
		Set
			If (String.Equals(Me._STORY, value) = false) Then
				Me.OnSTORYChanging(value)
				Me.SendPropertyChanging
				Me._STORY = value
				Me.SendPropertyChanged("STORY")
				Me.OnSTORYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROOMS", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=38)>  _
	Public Property ROOMS() As String
		Get
			Return Me._ROOMS
		End Get
		Set
			If (String.Equals(Me._ROOMS, value) = false) Then
				Me.OnROOMSChanging(value)
				Me.SendPropertyChanging
				Me._ROOMS = value
				Me.SendPropertyChanged("ROOMS")
				Me.OnROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOT", DbType:="VarChar(7)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=39)>  _
	Public Property LOT() As String
		Get
			Return Me._LOT
		End Get
		Set
			If (String.Equals(Me._LOT, value) = false) Then
				Me.OnLOTChanging(value)
				Me.SendPropertyChanging
				Me._LOT = value
				Me.SendPropertyChanged("LOT")
				Me.OnLOTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEGAL", DbType:="VarChar(51)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=40)>  _
	Public Property LEGAL() As String
		Get
			Return Me._LEGAL
		End Get
		Set
			If (String.Equals(Me._LEGAL, value) = false) Then
				Me.OnLEGALChanging(value)
				Me.SendPropertyChanging
				Me._LEGAL = value
				Me.SendPropertyChanged("LEGAL")
				Me.OnLEGALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPAR", DbType:="VarChar(23)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=41)>  _
	Public Property ASSPAR() As String
		Get
			Return Me._ASSPAR
		End Get
		Set
			If (String.Equals(Me._ASSPAR, value) = false) Then
				Me.OnASSPARChanging(value)
				Me.SendPropertyChanging
				Me._ASSPAR = value
				Me.SendPropertyChanged("ASSPAR")
				Me.OnASSPARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOD", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=42)>  _
	Public Property NOD() As String
		Get
			Return Me._NOD
		End Get
		Set
			If (String.Equals(Me._NOD, value) = false) Then
				Me.OnNODChanging(value)
				Me.SendPropertyChanging
				Me._NOD = value
				Me.SendPropertyChanged("NOD")
				Me.OnNODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOAN", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=43)>  _
	Public Property LOAN() As String
		Get
			Return Me._LOAN
		End Get
		Set
			If (String.Equals(Me._LOAN, value) = false) Then
				Me.OnLOANChanging(value)
				Me.SendPropertyChanging
				Me._LOAN = value
				Me.SendPropertyChanged("LOAN")
				Me.OnLOANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=44)>  _
	Public Property TDID() As String
		Get
			Return Me._TDID
		End Get
		Set
			If (String.Equals(Me._TDID, value) = false) Then
				Me.OnTDIDChanging(value)
				Me.SendPropertyChanging
				Me._TDID = value
				Me.SendPropertyChanged("TDID")
				Me.OnTDIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARKS", DbType:="VarChar(150)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=45)>  _
	Public Property REMARKS() As String
		Get
			Return Me._REMARKS
		End Get
		Set
			If (String.Equals(Me._REMARKS, value) = false) Then
				Me.OnREMARKSChanging(value)
				Me.SendPropertyChanging
				Me._REMARKS = value
				Me.SendPropertyChanged("REMARKS")
				Me.OnREMARKSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTY", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=46)>  _
	Public Property COUNTY() As String
		Get
			Return Me._COUNTY
		End Get
		Set
			If (String.Equals(Me._COUNTY, value) = false) Then
				Me.OnCOUNTYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTY = value
				Me.SendPropertyChanged("COUNTY")
				Me.OnCOUNTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_L_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=47)>  _
	Public Property L_DATE() As System.Nullable(Of Date)
		Get
			Return Me._L_DATE
		End Get
		Set
			If (Me._L_DATE.Equals(value) = false) Then
				Me.OnL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._L_DATE = value
				Me.SendPropertyChanged("L_DATE")
				Me.OnL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASOF", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=48)>  _
	Public Property ASOF() As System.Nullable(Of Date)
		Get
			Return Me._ASOF
		End Get
		Set
			If (Me._ASOF.Equals(value) = false) Then
				Me.OnASOFChanging(value)
				Me.SendPropertyChanging
				Me._ASOF = value
				Me.SendPropertyChanged("ASOF")
				Me.OnASOFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELNIQ", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=49)>  _
	Public Property DELNIQ() As System.Nullable(Of Date)
		Get
			Return Me._DELNIQ
		End Get
		Set
			If (Me._DELNIQ.Equals(value) = false) Then
				Me.OnDELNIQChanging(value)
				Me.SendPropertyChanging
				Me._DELNIQ = value
				Me.SendPropertyChanged("DELNIQ")
				Me.OnDELNIQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE", DbType:="VarChar(38)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=50)>  _
	Public Property TRUSTEE() As String
		Get
			Return Me._TRUSTEE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE, value) = false) Then
				Me.OnTRUSTEEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE = value
				Me.SendPropertyChanged("TRUSTEE")
				Me.OnTRUSTEEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_TIME", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=51)>  _
	Public Property SALE_TIME() As String
		Get
			Return Me._SALE_TIME
		End Get
		Set
			If (String.Equals(Me._SALE_TIME, value) = false) Then
				Me.OnSALE_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_TIME = value
				Me.SendPropertyChanged("SALE_TIME")
				Me.OnSALE_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS", DbType:="VarChar(14)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=52)>  _
	Public Property NTS() As String
		Get
			Return Me._NTS
		End Get
		Set
			If (String.Equals(Me._NTS, value) = false) Then
				Me.OnNTSChanging(value)
				Me.SendPropertyChanging
				Me._NTS = value
				Me.SendPropertyChanged("NTS")
				Me.OnNTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=53)>  _
	Public Property T_PHONE() As String
		Get
			Return Me._T_PHONE
		End Get
		Set
			If (String.Equals(Me._T_PHONE, value) = false) Then
				Me.OnT_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._T_PHONE = value
				Me.SendPropertyChanged("T_PHONE")
				Me.OnT_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=54)>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SITE", DbType:="VarChar(48)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=55)>  _
	Public Property SITE() As String
		Get
			Return Me._SITE
		End Get
		Set
			If (String.Equals(Me._SITE, value) = false) Then
				Me.OnSITEChanging(value)
				Me.SendPropertyChanging
				Me._SITE = value
				Me.SendPropertyChanged("SITE")
				Me.OnSITEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created", DbType:="DateTime NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=56)>  _
	Public Property Created() As Date
		Get
			Return Me._Created
		End Get
		Set
			If ((Me._Created = value)  _
						= false) Then
				Me.OnCreatedChanging(value)
				Me.SendPropertyChanging
				Me._Created = value
				Me.SendPropertyChanged("Created")
				Me.OnCreatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modified", DbType:="DateTime NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=57)>  _
	Public Property Modified() As Date
		Get
			Return Me._Modified
		End Get
		Set
			If ((Me._Modified = value)  _
						= false) Then
				Me.OnModifiedChanging(value)
				Me.SendPropertyChanging
				Me._Modified = value
				Me.SendPropertyChanged("Modified")
				Me.OnModifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatus", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=58)>  _
	Public Property IdStatus() As Integer
		Get
			Return Me._IdStatus
		End Get
		Set
			If ((Me._IdStatus = value)  _
						= false) Then
				If Me._Status.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdStatusChanging(value)
				Me.SendPropertyChanging
				Me._IdStatus = value
				Me.SendPropertyChanged("IdStatus")
				Me.OnIdStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatusDBF", DbType:="Int"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=59)>  _
	Public Property IdStatusDBF() As System.Nullable(Of Integer)
		Get
			Return Me._IdStatusDBF
		End Get
		Set
			If (Me._IdStatusDBF.Equals(value) = false) Then
				If Me._StatusDBF.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdStatusDBFChanging(value)
				Me.SendPropertyChanging
				Me._IdStatusDBF = value
				Me.SendPropertyChanged("IdStatusDBF")
				Me.OnIdStatusDBFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateDBF", DbType:="DateTime"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=60)>  _
	Public Property DateDBF() As System.Nullable(Of Date)
		Get
			Return Me._DateDBF
		End Get
		Set
			If (Me._DateDBF.Equals(value) = false) Then
				Me.OnDateDBFChanging(value)
				Me.SendPropertyChanging
				Me._DateDBF = value
				Me.SendPropertyChanged("DateDBF")
				Me.OnDateDBFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=61)>  _
	Public Property Locked() As Integer
		Get
			Return Me._Locked
		End Get
		Set
			If ((Me._Locked = value)  _
						= false) Then
				Me.OnLockedChanging(value)
				Me.SendPropertyChanging
				Me._Locked = value
				Me.SendPropertyChanged("Locked")
				Me.OnLockedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_PROPERTY_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=62)>  _
	Public Property SA_PROPERTY_ID() As String
		Get
			Return Me._SA_PROPERTY_ID
		End Get
		Set
			If (String.Equals(Me._SA_PROPERTY_ID, value) = false) Then
				Me.OnSA_PROPERTY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SA_PROPERTY_ID = value
				Me.SendPropertyChanged("SA_PROPERTY_ID")
				Me.OnSA_PROPERTY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SR_UNIQUE_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=63)>  _
	Public Property SR_UNIQUE_ID() As String
		Get
			Return Me._SR_UNIQUE_ID
		End Get
		Set
			If (String.Equals(Me._SR_UNIQUE_ID, value) = false) Then
				Me.OnSR_UNIQUE_IDChanging(value)
				Me.SendPropertyChanging
				Me._SR_UNIQUE_ID = value
				Me.SendPropertyChanged("SR_UNIQUE_ID")
				Me.OnSR_UNIQUE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER1", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=64)>  _
	Public Property OWNER1() As String
		Get
			Return Me._OWNER1
		End Get
		Set
			If (String.Equals(Me._OWNER1, value) = false) Then
				Me.OnOWNER1Changing(value)
				Me.SendPropertyChanging
				Me._OWNER1 = value
				Me.SendPropertyChanged("OWNER1")
				Me.OnOWNER1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWNER2", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=65)>  _
	Public Property OWNER2() As String
		Get
			Return Me._OWNER2
		End Get
		Set
			If (String.Equals(Me._OWNER2, value) = false) Then
				Me.OnOWNER2Changing(value)
				Me.SendPropertyChanging
				Me._OWNER2 = value
				Me.SendPropertyChanged("OWNER2")
				Me.OnOWNER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR_FIRST_NAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=66)>  _
	Public Property TRUSTOR_FIRST_NAME() As String
		Get
			Return Me._TRUSTOR_FIRST_NAME
		End Get
		Set
			If (String.Equals(Me._TRUSTOR_FIRST_NAME, value) = false) Then
				Me.OnTRUSTOR_FIRST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR_FIRST_NAME = value
				Me.SendPropertyChanged("TRUSTOR_FIRST_NAME")
				Me.OnTRUSTOR_FIRST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTOR_LAST_NAME", DbType:="VarChar(25)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=67)>  _
	Public Property TRUSTOR_LAST_NAME() As String
		Get
			Return Me._TRUSTOR_LAST_NAME
		End Get
		Set
			If (String.Equals(Me._TRUSTOR_LAST_NAME, value) = false) Then
				Me.OnTRUSTOR_LAST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTOR_LAST_NAME = value
				Me.SendPropertyChanged("TRUSTOR_LAST_NAME")
				Me.OnTRUSTOR_LAST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BATHROOMS", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=68)>  _
	Public Property BATHROOMS() As String
		Get
			Return Me._BATHROOMS
		End Get
		Set
			If (String.Equals(Me._BATHROOMS, value) = false) Then
				Me.OnBATHROOMSChanging(value)
				Me.SendPropertyChanging
				Me._BATHROOMS = value
				Me.SendPropertyChanged("BATHROOMS")
				Me.OnBATHROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BEDROOMS", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=69)>  _
	Public Property BEDROOMS() As String
		Get
			Return Me._BEDROOMS
		End Get
		Set
			If (String.Equals(Me._BEDROOMS, value) = false) Then
				Me.OnBEDROOMSChanging(value)
				Me.SendPropertyChanging
				Me._BEDROOMS = value
				Me.SendPropertyChanged("BEDROOMS")
				Me.OnBEDROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=70)>  _
	Public Property ADDRESS_ID_STATE() As String
		Get
			Return Me._ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._ADDRESS_ID_STATE, value) = false) Then
				Me.OnADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("ADDRESS_ID_STATE")
				Me.OnADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_PHONE", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=71)>  _
	Public Property TR_PHONE() As String
		Get
			Return Me._TR_PHONE
		End Get
		Set
			If (String.Equals(Me._TR_PHONE, value) = false) Then
				Me.OnTR_PHONEChanging(value)
				Me.SendPropertyChanging
				Me._TR_PHONE = value
				Me.SendPropertyChanged("TR_PHONE")
				Me.OnTR_PHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ADDRESS", DbType:="VarChar(78)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=72)>  _
	Public Property TRUSTEE_ADDRESS() As String
		Get
			Return Me._TRUSTEE_ADDRESS
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ADDRESS, value) = false) Then
				Me.OnTRUSTEE_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ADDRESS = value
				Me.SendPropertyChanged("TRUSTEE_ADDRESS")
				Me.OnTRUSTEE_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_CITY", DbType:="VarChar(22)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=73)>  _
	Public Property TRUSTEE_CITY() As String
		Get
			Return Me._TRUSTEE_CITY
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_CITY, value) = false) Then
				Me.OnTRUSTEE_CITYChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_CITY = value
				Me.SendPropertyChanged("TRUSTEE_CITY")
				Me.OnTRUSTEE_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ZIP", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=74)>  _
	Public Property TRUSTEE_ZIP() As String
		Get
			Return Me._TRUSTEE_ZIP
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ZIP, value) = false) Then
				Me.OnTRUSTEE_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ZIP = value
				Me.SendPropertyChanged("TRUSTEE_ZIP")
				Me.OnTRUSTEE_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=75)>  _
	Public Property TRUSTEE_ADDRESS_ID_STATE() As String
		Get
			Return Me._TRUSTEE_ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_ADDRESS_ID_STATE, value) = false) Then
				Me.OnTRUSTEE_ADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("TRUSTEE_ADDRESS_ID_STATE")
				Me.OnTRUSTEE_ADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ADDRESS", DbType:="VarChar(78)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=76)>  _
	Public Property BENE_ADDRESS() As String
		Get
			Return Me._BENE_ADDRESS
		End Get
		Set
			If (String.Equals(Me._BENE_ADDRESS, value) = false) Then
				Me.OnBENE_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ADDRESS = value
				Me.SendPropertyChanged("BENE_ADDRESS")
				Me.OnBENE_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_CITY", DbType:="VarChar(22)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=77)>  _
	Public Property BENE_CITY() As String
		Get
			Return Me._BENE_CITY
		End Get
		Set
			If (String.Equals(Me._BENE_CITY, value) = false) Then
				Me.OnBENE_CITYChanging(value)
				Me.SendPropertyChanging
				Me._BENE_CITY = value
				Me.SendPropertyChanged("BENE_CITY")
				Me.OnBENE_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ZIP", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=78)>  _
	Public Property BENE_ZIP() As String
		Get
			Return Me._BENE_ZIP
		End Get
		Set
			If (String.Equals(Me._BENE_ZIP, value) = false) Then
				Me.OnBENE_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ZIP = value
				Me.SendPropertyChanged("BENE_ZIP")
				Me.OnBENE_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=79)>  _
	Public Property BENE_ADDRESS_ID_STATE() As String
		Get
			Return Me._BENE_ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._BENE_ADDRESS_ID_STATE, value) = false) Then
				Me.OnBENE_ADDRESS_ID_STATEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_ADDRESS_ID_STATE = value
				Me.SendPropertyChanged("BENE_ADDRESS_ID_STATE")
				Me.OnBENE_ADDRESS_ID_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNITS", DbType:="VarChar(16)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=80)>  _
	Public Property UNITS() As String
		Get
			Return Me._UNITS
		End Get
		Set
			If (String.Equals(Me._UNITS, value) = false) Then
				Me.OnUNITSChanging(value)
				Me.SendPropertyChanging
				Me._UNITS = value
				Me.SendPropertyChanged("UNITS")
				Me.OnUNITSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTIMATED_PROP_VALUE", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=81)>  _
	Public Property ESTIMATED_PROP_VALUE() As String
		Get
			Return Me._ESTIMATED_PROP_VALUE
		End Get
		Set
			If (String.Equals(Me._ESTIMATED_PROP_VALUE, value) = false) Then
				Me.OnESTIMATED_PROP_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._ESTIMATED_PROP_VALUE = value
				Me.SendPropertyChanged("ESTIMATED_PROP_VALUE")
				Me.OnESTIMATED_PROP_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_1", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=82)>  _
	Public Property PROP_TAX_STATUS_1() As String
		Get
			Return Me._PROP_TAX_STATUS_1
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_1, value) = false) Then
				Me.OnPROP_TAX_STATUS_1Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_1 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_1")
				Me.OnPROP_TAX_STATUS_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_2", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=83)>  _
	Public Property PROP_TAX_STATUS_2() As String
		Get
			Return Me._PROP_TAX_STATUS_2
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_2, value) = false) Then
				Me.OnPROP_TAX_STATUS_2Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_2 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_2")
				Me.OnPROP_TAX_STATUS_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROP_TAX_STATUS_3", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=84)>  _
	Public Property PROP_TAX_STATUS_3() As String
		Get
			Return Me._PROP_TAX_STATUS_3
		End Get
		Set
			If (String.Equals(Me._PROP_TAX_STATUS_3, value) = false) Then
				Me.OnPROP_TAX_STATUS_3Changing(value)
				Me.SendPropertyChanging
				Me._PROP_TAX_STATUS_3 = value
				Me.SendPropertyChanged("PROP_TAX_STATUS_3")
				Me.OnPROP_TAX_STATUS_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NBRROOMS", DbType:="VarChar(8)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=85)>  _
	Public Property NBRROOMS() As String
		Get
			Return Me._NBRROOMS
		End Get
		Set
			If (String.Equals(Me._NBRROOMS, value) = false) Then
				Me.OnNBRROOMSChanging(value)
				Me.SendPropertyChanging
				Me._NBRROOMS = value
				Me.SendPropertyChanged("NBRROOMS")
				Me.OnNBRROOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_HS_NBR", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=86)>  _
	Public Property ST_HS_NBR() As String
		Get
			Return Me._ST_HS_NBR
		End Get
		Set
			If (String.Equals(Me._ST_HS_NBR, value) = false) Then
				Me.OnST_HS_NBRChanging(value)
				Me.SendPropertyChanging
				Me._ST_HS_NBR = value
				Me.SendPropertyChanged("ST_HS_NBR")
				Me.OnST_HS_NBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_FRACT", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=87)>  _
	Public Property ST_FRACT() As String
		Get
			Return Me._ST_FRACT
		End Get
		Set
			If (String.Equals(Me._ST_FRACT, value) = false) Then
				Me.OnST_FRACTChanging(value)
				Me.SendPropertyChanging
				Me._ST_FRACT = value
				Me.SendPropertyChanged("ST_FRACT")
				Me.OnST_FRACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_DIR", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=88)>  _
	Public Property ST_DIR() As String
		Get
			Return Me._ST_DIR
		End Get
		Set
			If (String.Equals(Me._ST_DIR, value) = false) Then
				Me.OnST_DIRChanging(value)
				Me.SendPropertyChanging
				Me._ST_DIR = value
				Me.SendPropertyChanged("ST_DIR")
				Me.OnST_DIRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_STRT", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=89)>  _
	Public Property ST_STRT() As String
		Get
			Return Me._ST_STRT
		End Get
		Set
			If (String.Equals(Me._ST_STRT, value) = false) Then
				Me.OnST_STRTChanging(value)
				Me.SendPropertyChanging
				Me._ST_STRT = value
				Me.SendPropertyChanged("ST_STRT")
				Me.OnST_STRTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_SUF", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=90)>  _
	Public Property ST_SUF() As String
		Get
			Return Me._ST_SUF
		End Get
		Set
			If (String.Equals(Me._ST_SUF, value) = false) Then
				Me.OnST_SUFChanging(value)
				Me.SendPropertyChanging
				Me._ST_SUF = value
				Me.SendPropertyChanged("ST_SUF")
				Me.OnST_SUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_POSTD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=91)>  _
	Public Property ST_POSTD() As String
		Get
			Return Me._ST_POSTD
		End Get
		Set
			If (String.Equals(Me._ST_POSTD, value) = false) Then
				Me.OnST_POSTDChanging(value)
				Me.SendPropertyChanging
				Me._ST_POSTD = value
				Me.SendPropertyChanged("ST_POSTD")
				Me.OnST_POSTDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_UNTPR", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=92)>  _
	Public Property ST_UNTPR() As String
		Get
			Return Me._ST_UNTPR
		End Get
		Set
			If (String.Equals(Me._ST_UNTPR, value) = false) Then
				Me.OnST_UNTPRChanging(value)
				Me.SendPropertyChanging
				Me._ST_UNTPR = value
				Me.SendPropertyChanged("ST_UNTPR")
				Me.OnST_UNTPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_UNTVL", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=93)>  _
	Public Property ST_UNTVL() As String
		Get
			Return Me._ST_UNTVL
		End Get
		Set
			If (String.Equals(Me._ST_UNTVL, value) = false) Then
				Me.OnST_UNTVLChanging(value)
				Me.SendPropertyChanging
				Me._ST_UNTVL = value
				Me.SendPropertyChanged("ST_UNTVL")
				Me.OnST_UNTVLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_CITYSTATE", DbType:="VarChar(55)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=94)>  _
	Public Property ST_CITYSTATE() As String
		Get
			Return Me._ST_CITYSTATE
		End Get
		Set
			If (String.Equals(Me._ST_CITYSTATE, value) = false) Then
				Me.OnST_CITYSTATEChanging(value)
				Me.SendPropertyChanging
				Me._ST_CITYSTATE = value
				Me.SendPropertyChanged("ST_CITYSTATE")
				Me.OnST_CITYSTATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_HS_NBR", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=95)>  _
	Public Property ML_HS_NBR() As String
		Get
			Return Me._ML_HS_NBR
		End Get
		Set
			If (String.Equals(Me._ML_HS_NBR, value) = false) Then
				Me.OnML_HS_NBRChanging(value)
				Me.SendPropertyChanging
				Me._ML_HS_NBR = value
				Me.SendPropertyChanged("ML_HS_NBR")
				Me.OnML_HS_NBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_FRACT", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=96)>  _
	Public Property ML_FRACT() As String
		Get
			Return Me._ML_FRACT
		End Get
		Set
			If (String.Equals(Me._ML_FRACT, value) = false) Then
				Me.OnML_FRACTChanging(value)
				Me.SendPropertyChanging
				Me._ML_FRACT = value
				Me.SendPropertyChanged("ML_FRACT")
				Me.OnML_FRACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_DIR", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=97)>  _
	Public Property ML_DIR() As String
		Get
			Return Me._ML_DIR
		End Get
		Set
			If (String.Equals(Me._ML_DIR, value) = false) Then
				Me.OnML_DIRChanging(value)
				Me.SendPropertyChanging
				Me._ML_DIR = value
				Me.SendPropertyChanged("ML_DIR")
				Me.OnML_DIRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_STRT", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=98)>  _
	Public Property ML_STRT() As String
		Get
			Return Me._ML_STRT
		End Get
		Set
			If (String.Equals(Me._ML_STRT, value) = false) Then
				Me.OnML_STRTChanging(value)
				Me.SendPropertyChanging
				Me._ML_STRT = value
				Me.SendPropertyChanged("ML_STRT")
				Me.OnML_STRTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_SUF", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=99)>  _
	Public Property ML_SUF() As String
		Get
			Return Me._ML_SUF
		End Get
		Set
			If (String.Equals(Me._ML_SUF, value) = false) Then
				Me.OnML_SUFChanging(value)
				Me.SendPropertyChanging
				Me._ML_SUF = value
				Me.SendPropertyChanged("ML_SUF")
				Me.OnML_SUFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_POSTD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=100)>  _
	Public Property ML_POSTD() As String
		Get
			Return Me._ML_POSTD
		End Get
		Set
			If (String.Equals(Me._ML_POSTD, value) = false) Then
				Me.OnML_POSTDChanging(value)
				Me.SendPropertyChanging
				Me._ML_POSTD = value
				Me.SendPropertyChanged("ML_POSTD")
				Me.OnML_POSTDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_UNTPR", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=101)>  _
	Public Property ML_UNTPR() As String
		Get
			Return Me._ML_UNTPR
		End Get
		Set
			If (String.Equals(Me._ML_UNTPR, value) = false) Then
				Me.OnML_UNTPRChanging(value)
				Me.SendPropertyChanging
				Me._ML_UNTPR = value
				Me.SendPropertyChanged("ML_UNTPR")
				Me.OnML_UNTPRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_UNTVL", DbType:="VarChar(6)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=102)>  _
	Public Property ML_UNTVL() As String
		Get
			Return Me._ML_UNTVL
		End Get
		Set
			If (String.Equals(Me._ML_UNTVL, value) = false) Then
				Me.OnML_UNTVLChanging(value)
				Me.SendPropertyChanging
				Me._ML_UNTVL = value
				Me.SendPropertyChanged("ML_UNTVL")
				Me.OnML_UNTVLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_CITY", DbType:="VarChar(55)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=103)>  _
	Public Property ML_CITY() As String
		Get
			Return Me._ML_CITY
		End Get
		Set
			If (String.Equals(Me._ML_CITY, value) = false) Then
				Me.OnML_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ML_CITY = value
				Me.SendPropertyChanged("ML_CITY")
				Me.OnML_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=104)>  _
	Public Property ML_STATE() As String
		Get
			Return Me._ML_STATE
		End Get
		Set
			If (String.Equals(Me._ML_STATE, value) = false) Then
				Me.OnML_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ML_STATE = value
				Me.SendPropertyChanged("ML_STATE")
				Me.OnML_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ZIP", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=105)>  _
	Public Property ML_ZIP() As String
		Get
			Return Me._ML_ZIP
		End Get
		Set
			If (String.Equals(Me._ML_ZIP, value) = false) Then
				Me.OnML_ZIPChanging(value)
				Me.SendPropertyChanging
				Me._ML_ZIP = value
				Me.SendPropertyChanged("ML_ZIP")
				Me.OnML_ZIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ML_ZIPPLUS4", DbType:="VarChar(4)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=106)>  _
	Public Property ML_ZIPPLUS4() As String
		Get
			Return Me._ML_ZIPPLUS4
		End Get
		Set
			If (String.Equals(Me._ML_ZIPPLUS4, value) = false) Then
				Me.OnML_ZIPPLUS4Changing(value)
				Me.SendPropertyChanging
				Me._ML_ZIPPLUS4 = value
				Me.SendPropertyChanged("ML_ZIPPLUS4")
				Me.OnML_ZIPPLUS4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_HOUSE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=107)>  _
	Public Property TRUSTEE_HOUSE() As String
		Get
			Return Me._TRUSTEE_HOUSE
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_HOUSE, value) = false) Then
				Me.OnTRUSTEE_HOUSEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_HOUSE = value
				Me.SendPropertyChanged("TRUSTEE_HOUSE")
				Me.OnTRUSTEE_HOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_STNAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=108)>  _
	Public Property TRUSTEE_STNAME() As String
		Get
			Return Me._TRUSTEE_STNAME
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_STNAME, value) = false) Then
				Me.OnTRUSTEE_STNAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_STNAME = value
				Me.SendPropertyChanged("TRUSTEE_STNAME")
				Me.OnTRUSTEE_STNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRUSTEE_UNITNBR", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=109)>  _
	Public Property TRUSTEE_UNITNBR() As String
		Get
			Return Me._TRUSTEE_UNITNBR
		End Get
		Set
			If (String.Equals(Me._TRUSTEE_UNITNBR, value) = false) Then
				Me.OnTRUSTEE_UNITNBRChanging(value)
				Me.SendPropertyChanging
				Me._TRUSTEE_UNITNBR = value
				Me.SendPropertyChanged("TRUSTEE_UNITNBR")
				Me.OnTRUSTEE_UNITNBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_HOUSE", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=110)>  _
	Public Property BENE_HOUSE() As String
		Get
			Return Me._BENE_HOUSE
		End Get
		Set
			If (String.Equals(Me._BENE_HOUSE, value) = false) Then
				Me.OnBENE_HOUSEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_HOUSE = value
				Me.SendPropertyChanged("BENE_HOUSE")
				Me.OnBENE_HOUSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_STNAME", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=111)>  _
	Public Property BENE_STNAME() As String
		Get
			Return Me._BENE_STNAME
		End Get
		Set
			If (String.Equals(Me._BENE_STNAME, value) = false) Then
				Me.OnBENE_STNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BENE_STNAME = value
				Me.SendPropertyChanged("BENE_STNAME")
				Me.OnBENE_STNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BENE_UNITNBR", DbType:="VarChar(5)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=112)>  _
	Public Property BENE_UNITNBR() As String
		Get
			Return Me._BENE_UNITNBR
		End Get
		Set
			If (String.Equals(Me._BENE_UNITNBR, value) = false) Then
				Me.OnBENE_UNITNBRChanging(value)
				Me.SendPropertyChanging
				Me._BENE_UNITNBR = value
				Me.SendPropertyChanged("BENE_UNITNBR")
				Me.OnBENE_UNITNBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_OWNR_SC", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=113)>  _
	Public Property SA_OWNR_SC() As String
		Get
			Return Me._SA_OWNR_SC
		End Get
		Set
			If (String.Equals(Me._SA_OWNR_SC, value) = false) Then
				Me.OnSA_OWNR_SCChanging(value)
				Me.SendPropertyChanging
				Me._SA_OWNR_SC = value
				Me.SendPropertyChanged("SA_OWNR_SC")
				Me.OnSA_OWNR_SCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_POL_COD", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=114)>  _
	Public Property SA_POL_COD() As String
		Get
			Return Me._SA_POL_COD
		End Get
		Set
			If (String.Equals(Me._SA_POL_COD, value) = false) Then
				Me.OnSA_POL_CODChanging(value)
				Me.SendPropertyChanging
				Me._SA_POL_COD = value
				Me.SendPropertyChanged("SA_POL_COD")
				Me.OnSA_POL_CODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_POL_SQF", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=115)>  _
	Public Property SA_POL_SQF() As String
		Get
			Return Me._SA_POL_SQF
		End Get
		Set
			If (String.Equals(Me._SA_POL_SQF, value) = false) Then
				Me.OnSA_POL_SQFChanging(value)
				Me.SendPropertyChanging
				Me._SA_POL_SQF = value
				Me.SendPropertyChanged("SA_POL_SQF")
				Me.OnSA_POL_SQFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_VW_CODE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=116)>  _
	Public Property SA_VW_CODE() As String
		Get
			Return Me._SA_VW_CODE
		End Get
		Set
			If (String.Equals(Me._SA_VW_CODE, value) = false) Then
				Me.OnSA_VW_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SA_VW_CODE = value
				Me.SendPropertyChanged("SA_VW_CODE")
				Me.OnSA_VW_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOD_REC_DT", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=117)>  _
	Public Property NOD_REC_DT() As System.Nullable(Of Date)
		Get
			Return Me._NOD_REC_DT
		End Get
		Set
			If (Me._NOD_REC_DT.Equals(value) = false) Then
				Me.OnNOD_REC_DTChanging(value)
				Me.SendPropertyChanging
				Me._NOD_REC_DT = value
				Me.SendPropertyChanged("NOD_REC_DT")
				Me.OnNOD_REC_DTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS_REC_DT", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=118)>  _
	Public Property NTS_REC_DT() As System.Nullable(Of Date)
		Get
			Return Me._NTS_REC_DT
		End Get
		Set
			If (Me._NTS_REC_DT.Equals(value) = false) Then
				Me.OnNTS_REC_DTChanging(value)
				Me.SendPropertyChanging
				Me._NTS_REC_DT = value
				Me.SendPropertyChanged("NTS_REC_DT")
				Me.OnNTS_REC_DTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ST_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=119)>  _
	Public Property ST_STATE() As String
		Get
			Return Me._ST_STATE
		End Get
		Set
			If (String.Equals(Me._ST_STATE, value) = false) Then
				Me.OnST_STATEChanging(value)
				Me.SendPropertyChanging
				Me._ST_STATE = value
				Me.SendPropertyChanged("ST_STATE")
				Me.OnST_STATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCounty", DbType:="Int"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=120)>  _
	Public Property IdCounty() As System.Nullable(Of Integer)
		Get
			Return Me._IdCounty
		End Get
		Set
			If (Me._IdCounty.Equals(value) = false) Then
				Me.OnIdCountyChanging(value)
				Me.SendPropertyChanging
				Me._IdCounty = value
				Me.SendPropertyChanged("IdCounty")
				Me.OnIdCountyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FD_TRUSTEE_SALE_NBR", DbType:="VarChar(15)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=121)>  _
	Public Property FD_TRUSTEE_SALE_NBR() As String
		Get
			Return Me._FD_TRUSTEE_SALE_NBR
		End Get
		Set
			If (String.Equals(Me._FD_TRUSTEE_SALE_NBR, value) = false) Then
				Me.OnFD_TRUSTEE_SALE_NBRChanging(value)
				Me.SendPropertyChanging
				Me._FD_TRUSTEE_SALE_NBR = value
				Me.SendPropertyChanged("FD_TRUSTEE_SALE_NBR")
				Me.OnFD_TRUSTEE_SALE_NBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_ZONING", DbType:="VarChar(13)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=122)>  _
	Public Property SA_ZONING() As String
		Get
			Return Me._SA_ZONING
		End Get
		Set
			If (String.Equals(Me._SA_ZONING, value) = false) Then
				Me.OnSA_ZONINGChanging(value)
				Me.SendPropertyChanging
				Me._SA_ZONING = value
				Me.SendPropertyChanged("SA_ZONING")
				Me.OnSA_ZONINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_VAL_TRANSFER", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=123)>  _
	Public Property SA_VAL_TRANSFER() As String
		Get
			Return Me._SA_VAL_TRANSFER
		End Get
		Set
			If (String.Equals(Me._SA_VAL_TRANSFER, value) = false) Then
				Me.OnSA_VAL_TRANSFERChanging(value)
				Me.SendPropertyChanging
				Me._SA_VAL_TRANSFER = value
				Me.SendPropertyChanged("SA_VAL_TRANSFER")
				Me.OnSA_VAL_TRANSFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Status_NOD", Storage:="_Status", ThisKey:="IdStatus", OtherKey:="IdStatus", IsForeignKey:=true)>  _
	Public Property Status() As Status
		Get
			Return Me._Status.Entity
		End Get
		Set
			Dim previousValue As Status = Me._Status.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Status.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Status.Entity = Nothing
					previousValue.NODs.Remove(Me)
				End If
				Me._Status.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NODs.Add(Me)
					Me._IdStatus = value.IdStatus
				Else
					Me._IdStatus = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Status")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="StatusDBF_NOD", Storage:="_StatusDBF", ThisKey:="IdStatusDBF", OtherKey:="IdStatusDBF", IsForeignKey:=true)>  _
	Public Property StatusDBF() As StatusDBF
		Get
			Return Me._StatusDBF.Entity
		End Get
		Set
			Dim previousValue As StatusDBF = Me._StatusDBF.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StatusDBF.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StatusDBF.Entity = Nothing
					previousValue.NODs.Remove(Me)
				End If
				Me._StatusDBF.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.NODs.Add(Me)
					Me._IdStatusDBF = value.IdStatusDBF
				Else
					Me._IdStatusDBF = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("StatusDBF")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub Initialize()
		Me._Status = CType(Nothing, EntityRef(Of Status))
		Me._StatusDBF = CType(Nothing, EntityRef(Of StatusDBF))
		OnCreated
	End Sub
	
	<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
	 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
	Public Sub OnDeserializing(ByVal context As StreamingContext)
		Me.Initialize
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cities_in_Counties"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class Cities_in_County
	
	Private _County As String
	
	Private _Cities As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_County", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property County() As String
		Get
			Return Me._County
		End Get
		Set
			If (String.Equals(Me._County, value) = false) Then
				Me._County = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cities", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property Cities() As String
		Get
			Return Me._Cities
		End Get
		Set
			If (String.Equals(Me._Cities, value) = false) Then
				Me._Cities = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NTSMatching"),  _
 Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class NTSMatching
	
	Private _tsno As String
	
	Private _NTS As String
	
	Private _ASSPAR As String
	
	Private _SA_PROPERTY_ID As String
	
	Private _Created As Date
	
	Private _IdCounty As System.Nullable(Of Integer)
	
	Private _ADDRESS_ID_STATE As String
	
	Private _IdStatus As Integer
	
	Private _Locked As Integer
	
	Private _IdNts As Integer
	
	Private _T_S_NO As String
	
	Private _TDID As String
	
	Private _SR_UNIQUE_ID As String
	
	Private _IdState As String
	
	Private _CountyName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tsno", DbType:="VarChar(1000)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property tsno() As String
		Get
			Return Me._tsno
		End Get
		Set
			If (String.Equals(Me._tsno, value) = false) Then
				Me._tsno = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS", DbType:="VarChar(14)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property NTS() As String
		Get
			Return Me._NTS
		End Get
		Set
			If (String.Equals(Me._NTS, value) = false) Then
				Me._NTS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPAR", DbType:="VarChar(50)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property ASSPAR() As String
		Get
			Return Me._ASSPAR
		End Get
		Set
			If (String.Equals(Me._ASSPAR, value) = false) Then
				Me._ASSPAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA_PROPERTY_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property SA_PROPERTY_ID() As String
		Get
			Return Me._SA_PROPERTY_ID
		End Get
		Set
			If (String.Equals(Me._SA_PROPERTY_ID, value) = false) Then
				Me._SA_PROPERTY_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Created", DbType:="DateTime NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property Created() As Date
		Get
			Return Me._Created
		End Get
		Set
			If ((Me._Created = value)  _
						= false) Then
				Me._Created = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCounty", DbType:="Int"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
	Public Property IdCounty() As System.Nullable(Of Integer)
		Get
			Return Me._IdCounty
		End Get
		Set
			If (Me._IdCounty.Equals(value) = false) Then
				Me._IdCounty = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_ID_STATE", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
	Public Property ADDRESS_ID_STATE() As String
		Get
			Return Me._ADDRESS_ID_STATE
		End Get
		Set
			If (String.Equals(Me._ADDRESS_ID_STATE, value) = false) Then
				Me._ADDRESS_ID_STATE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdStatus", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
	Public Property IdStatus() As Integer
		Get
			Return Me._IdStatus
		End Get
		Set
			If ((Me._IdStatus = value)  _
						= false) Then
				Me._IdStatus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
	Public Property Locked() As Integer
		Get
			Return Me._Locked
		End Get
		Set
			If ((Me._Locked = value)  _
						= false) Then
				Me._Locked = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdNts", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
	Public Property IdNts() As Integer
		Get
			Return Me._IdNts
		End Get
		Set
			If ((Me._IdNts = value)  _
						= false) Then
				Me._IdNts = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T_S_NO", DbType:="VarChar(15)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
	Public Property T_S_NO() As String
		Get
			Return Me._T_S_NO
		End Get
		Set
			If (String.Equals(Me._T_S_NO, value) = false) Then
				Me._T_S_NO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
	Public Property TDID() As String
		Get
			Return Me._TDID
		End Get
		Set
			If (String.Equals(Me._TDID, value) = false) Then
				Me._TDID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SR_UNIQUE_ID", DbType:="VarChar(12)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
	Public Property SR_UNIQUE_ID() As String
		Get
			Return Me._SR_UNIQUE_ID
		End Get
		Set
			If (String.Equals(Me._SR_UNIQUE_ID, value) = false) Then
				Me._SR_UNIQUE_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdState", DbType:="VarChar(2) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
	Public Property IdState() As String
		Get
			Return Me._IdState
		End Get
		Set
			If (String.Equals(Me._IdState, value) = false) Then
				Me._IdState = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CountyName", DbType:="VarChar(200) NOT NULL", CanBeNull:=false),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
	Public Property CountyName() As String
		Get
			Return Me._CountyName
		End Get
		Set
			If (String.Equals(Me._CountyName, value) = false) Then
				Me._CountyName = value
			End If
		End Set
	End Property
End Class

<Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class SearchNODResult
	
	Private _Found As System.Nullable(Of Boolean)
	
	Private _ASSPAR As String
	
	Private _FoundASPAR As String
	
	Private _TDID As String
	
	Private _FoundTDID As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Found", DbType:="Bit"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property Found() As System.Nullable(Of Boolean)
		Get
			Return Me._Found
		End Get
		Set
			If (Me._Found.Equals(value) = false) Then
				Me._Found = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSPAR", DbType:="VarChar(46)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property ASSPAR() As String
		Get
			Return Me._ASSPAR
		End Get
		Set
			If (String.Equals(Me._ASSPAR, value) = false) Then
				Me._ASSPAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FoundASPAR", DbType:="VarChar(46)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property FoundASPAR() As String
		Get
			Return Me._FoundASPAR
		End Get
		Set
			If (String.Equals(Me._FoundASPAR, value) = false) Then
				Me._FoundASPAR = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property TDID() As String
		Get
			Return Me._TDID
		End Get
		Set
			If (String.Equals(Me._TDID, value) = false) Then
				Me._TDID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FoundTDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property FoundTDID() As String
		Get
			Return Me._FoundTDID
		End Get
		Set
			If (String.Equals(Me._FoundTDID, value) = false) Then
				Me._FoundTDID = value
			End If
		End Set
	End Property
End Class

<Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class SearchNTSResult
	
	Private _Found As System.Nullable(Of Boolean)
	
	Private _NTS As String
	
	Private _FoundNTS As String
	
	Private _TDID As String
	
	Private _FoundTDID As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Found", DbType:="Bit"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property Found() As System.Nullable(Of Boolean)
		Get
			Return Me._Found
		End Get
		Set
			If (Me._Found.Equals(value) = false) Then
				Me._Found = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NTS", DbType:="VarChar(14)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property NTS() As String
		Get
			Return Me._NTS
		End Get
		Set
			If (String.Equals(Me._NTS, value) = false) Then
				Me._NTS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FoundNTS", DbType:="VarChar(14)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property FoundNTS() As String
		Get
			Return Me._FoundNTS
		End Get
		Set
			If (String.Equals(Me._FoundNTS, value) = false) Then
				Me._FoundNTS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property TDID() As String
		Get
			Return Me._TDID
		End Get
		Set
			If (String.Equals(Me._TDID, value) = false) Then
				Me._TDID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FoundTDID", DbType:="VarChar(20)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property FoundTDID() As String
		Get
			Return Me._FoundTDID
		End Get
		Set
			If (String.Equals(Me._FoundTDID, value) = false) Then
				Me._FoundTDID = value
			End If
		End Set
	End Property
End Class

<Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class GetMissingLoanFromNODResult
	
	Private _TD1_A As String
	
	Private _TD1 As String
	
	Private _TD1_D As System.Nullable(Of Date)
	
	Private _TD2_A As String
	
	Private _TD2 As String
	
	Private _TD2_D As System.Nullable(Of Date)
	
	Private _TD3_A As String
	
	Private _TD3 As String
	
	Private _TD3_D As System.Nullable(Of Date)
	
	Private _LoanPosition As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property TD1_A() As String
		Get
			Return Me._TD1_A
		End Get
		Set
			If (String.Equals(Me._TD1_A, value) = false) Then
				Me._TD1_A = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property TD1() As String
		Get
			Return Me._TD1
		End Get
		Set
			If (String.Equals(Me._TD1, value) = false) Then
				Me._TD1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property TD1_D() As System.Nullable(Of Date)
		Get
			Return Me._TD1_D
		End Get
		Set
			If (Me._TD1_D.Equals(value) = false) Then
				Me._TD1_D = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
	Public Property TD2_A() As String
		Get
			Return Me._TD2_A
		End Get
		Set
			If (String.Equals(Me._TD2_A, value) = false) Then
				Me._TD2_A = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
	Public Property TD2() As String
		Get
			Return Me._TD2
		End Get
		Set
			If (String.Equals(Me._TD2, value) = false) Then
				Me._TD2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
	Public Property TD2_D() As System.Nullable(Of Date)
		Get
			Return Me._TD2_D
		End Get
		Set
			If (Me._TD2_D.Equals(value) = false) Then
				Me._TD2_D = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_A", DbType:="VarChar(2)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
	Public Property TD3_A() As String
		Get
			Return Me._TD3_A
		End Get
		Set
			If (String.Equals(Me._TD3_A, value) = false) Then
				Me._TD3_A = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
	Public Property TD3() As String
		Get
			Return Me._TD3
		End Get
		Set
			If (String.Equals(Me._TD3, value) = false) Then
				Me._TD3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3_D", DbType:="Date"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
	Public Property TD3_D() As System.Nullable(Of Date)
		Get
			Return Me._TD3_D
		End Get
		Set
			If (Me._TD3_D.Equals(value) = false) Then
				Me._TD3_D = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LoanPosition", DbType:="Int NOT NULL"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
	Public Property LoanPosition() As Integer
		Get
			Return Me._LoanPosition
		End Get
		Set
			If ((Me._LoanPosition = value)  _
						= false) Then
				Me._LoanPosition = value
			End If
		End Set
	End Property
End Class

<Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class GetOriginalLoanAmountFromNODResult
	
	Private _TD1 As String
	
	Private _TD2 As String
	
	Private _TD3 As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD1", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property TD1() As String
		Get
			Return Me._TD1
		End Get
		Set
			If (String.Equals(Me._TD1, value) = false) Then
				Me._TD1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD2", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
	Public Property TD2() As String
		Get
			Return Me._TD2
		End Get
		Set
			If (String.Equals(Me._TD2, value) = false) Then
				Me._TD2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TD3", DbType:="VarChar(10)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
	Public Property TD3() As String
		Get
			Return Me._TD3
		End Get
		Set
			If (String.Equals(Me._TD3, value) = false) Then
				Me._TD3 = value
			End If
		End Set
	End Property
End Class

<Global.System.Runtime.Serialization.DataContractAttribute()>  _
Partial Public Class splitstringResult
	
	Private _value As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_value", DbType:="NVarChar(500)"),  _
	 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
	Public Property value() As String
		Get
			Return Me._value
		End Get
		Set
			If (String.Equals(Me._value, value) = false) Then
				Me._value = value
			End If
		End Set
	End Property
End Class
